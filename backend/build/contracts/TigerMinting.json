{
  "contractName": "TigerMinting",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tigerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "momId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "dadId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "genes",
          "type": "uint256"
        }
      ],
      "name": "Birth",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "TxType",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "BreedTransaction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "CREATION_LIMIT_GEN0",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tigerId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_momId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_dadId",
          "type": "uint256"
        }
      ],
      "name": "breed",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "gen0Count",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tigerId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tigerId",
          "type": "uint256"
        }
      ],
      "name": "getChildren",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tigerId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tigerId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tigerId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "tokensOfOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tigerId",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tigerId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_genes",
          "type": "uint256"
        }
      ],
      "name": "createGen0Tiger",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tigerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"momId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dadId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"genes\",\"type\":\"uint256\"}],\"name\":\"Birth\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"TxType\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"BreedTransaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"CREATION_LIMIT_GEN0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tigerId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_momId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_dadId\",\"type\":\"uint256\"}],\"name\":\"breed\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_genes\",\"type\":\"uint256\"}],\"name\":\"createGen0Tiger\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"gen0Count\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tigerId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tigerId\",\"type\":\"uint256\"}],\"name\":\"getChildren\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tigerId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tigerId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tigerId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tigerId\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tigerId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Andrew Ayson\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"[ERC721] The zero address indicates there is no approved address Requires - msg.sender is owner or approved opperator - cannot approve owner\",\"params\":{\"_tigerId\":\"The tiger id that is approved for\",\"_to\":\"The address.\"}},\"balanceOf(address)\":{\"details\":\"[ERC721] Tigers assigned to the zero address are considered invalid, and this function throws for queries about the zero address\",\"params\":{\"_owner\":\"The address to check\"},\"return\":\"The address of the owner of the tiger\"},\"breed(uint256,uint256)\":{\"params\":{\"_dadId\":\"the id of the dad\",\"_momId\":\"the id of the mom\"}},\"createGen0Tiger(uint256)\":{\"details\":\"Can only be called by owner and when limit has not be reached\",\"return\":\"The id of the created tiger\"},\"getApproved(uint256)\":{\"details\":\"[ERC721] Get the approval address of the tiger Requires - _tigerId must exist\",\"params\":{\"_tigerId\":\"The tiger id\"},\"return\":\"The approved address for this tiger, or the zero address if there is none\"},\"getChildren(uint256)\":{\"params\":{\"_tigerId\":\"the id of the mom\"},\"return\":\"array of ids of the children\"},\"isApprovedForAll(address,address)\":{\"details\":\"[ERC721]\",\"params\":{\"_operator\":\"The operator\",\"_owner\":\"The owner\"},\"return\":\"True if `_operator` is an approved operator for `_owner`, false otherwise\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"[ERC721] Tigers assigned to the zero address are considered invalid, and this function throws for queries about the zero address\",\"return\":\"the address of the onwer of _tigerId\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"[ERC721] Transfer implementation with a check on caller if it can accept ERC721 Requires - valid token - valid, non-zero _to address (via _transfer) - not to this address to prevent potential misuse (via _transfer) - msg.sender to be the owner, approved, or operator - when the caller is a smart contract, it should accept ERC721 tokens\",\"params\":{\"_from\":\"current owner of the tiger\",\"_tigerId\":\"uint256 id of the tiger to be transferred\",\"_to\":\"address to receive the ownership of the given tiger id\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"[ERC721] This works identically to the other function with an extra data parameter except this function just sets data to \\\"\\\"\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"_from\":\"current owner of the tiger\",\"_tigerId\":\"The id of the tiger to be transferred\",\"_to\":\"address to receive the ownership of the given tiger id\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"[ERC721] Emits the ApprovalForAll event. Requires - cannot approve self\",\"params\":{\"_approved\":\"The approval status\",\"_operator\":\"The tiger id\"}},\"supportsInterface(bytes4)\":{\"details\":\"Interface identification is specified in ERC-165. This function uses less than 30,000 gas.\",\"params\":{\"_interfaceId\":\"The interface identifier, as specified in ERC-165\"},\"return\":\"true if the contract implements _interfaceId and _interfaceId is not 0xffffffff, false otherwise\"},\"tokenByIndex(uint256)\":{\"details\":\"[ERC721Enumerable] Requires: - _index < totalSupply()\",\"params\":{\"_index\":\"A counter less than `totalSupply()`\"},\"return\":\"_index which is the same as the identifier\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.Be aware when calling this contract as its quite expensive because it loops through all tigers. Could potentially be optimized if we save all tigers also in an mapping of owners.\",\"params\":{\"_index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"_owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokensOfOwner(address)\":{\"details\":\"[ERC721Enumerable] Requires - _index < balanceOf(_owner) - _owner is  non-zero addressBe aware when calling this contract as its quite expensive because it loops through all tigers\",\"params\":{\"_owner\":\"An address where we are interested in tigers owned by them\"},\"return\":\"The token identifier for the `_index`th tiger assigned to `_owner`,  (sort order not specified)\"},\"totalSupply()\":{\"details\":\"[ERC721Enumerable]\",\"return\":\"A count of valid tigers tracked by this contract, where each one of them has an assigned and queryable owner not equal to the zero address\"},\"transfer(address,uint256)\":{\"params\":{\"_tigerId\":\"id of the tiger to be transferred\",\"_to\":\"address to receive the ownership of the given tiger id\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"[ERC721] Transfers the ownership of a given token id to another address Requires - valid token - valid, non-zero _to address (via _transfer) - not to this address to prevent potential misuse (via _transfer) - msg.sender to be the owner, approved, or operator\",\"params\":{\"_from\":\"current owner of the tiger\",\"_tigerId\":\"id of the tiger to be transferred\",\"_to\":\"address to receive the ownership of the given tiger id\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"The TigerMinting contract responsible to create tigers.\"},\"userdoc\":{\"methods\":{\"approve(address,uint256)\":{\"notice\":\"Change or reaffirm the approved address for an tiger\"},\"balanceOf(address)\":{\"notice\":\"Count all Tigers assigned to an owner\"},\"breed(uint256,uint256)\":{\"notice\":\"Breed a new tiger based on a mom and dad\"},\"createGen0Tiger(uint256)\":{\"notice\":\"Creates a new gen0 tiger\"},\"getApproved(uint256)\":{\"notice\":\"Get the approved address for a single tiger\"},\"getChildren(uint256)\":{\"notice\":\"Get all the children of a tigerId\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Query if an address is an authorized operator for another address\"},\"ownerOf(uint256)\":{\"notice\":\"Find the owner of an Tiger\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"Transfers the ownership of an Tiger from one address to another address\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Transfers the ownership of an Tiger from one address to another address\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Enable or disable approval for a third party (\\\"operator\\\") to manage all of `msg.sender`'s assets\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"},\"tokenByIndex(uint256)\":{\"notice\":\"Enumerate valid tigers\"},\"tokensOfOwner(address)\":{\"notice\":\"Returns a list of all Tiger IDs assigned to an address.\"},\"totalSupply()\":{\"notice\":\"Count tigers tracked by this contract\"},\"transfer(address,uint256)\":{\"notice\":\"Transfers the ownership of an own Tiger to another address\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer ownership of a Tiger -- THE CALLER IS RESPONSIBLE TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING TIGERS OR ELSE THEY MAY BE PERMANENTLY LOST\"}}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/TigerMinting.sol\":\"TigerMinting\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/TigerBase.sol\":{\"keccak256\":\"0x4f16d6f08fd400e5c459f843a650266c50f9a4f2e6b5812c78cf137a4866a957\",\"urls\":[\"bzz-raw://b77c3c77d3f63da9fbb5210d806af7905802d909916e12bfb29cde5b7b277317\",\"dweb:/ipfs/QmX11ntZo4ppZpt96frRYxEKxci9Rfx4KeSk11B3WMsKLz\"]},\"project:/contracts/TigerBreeding.sol\":{\"keccak256\":\"0xd407295f0a0806d1778fac3f5db3e583357de3ebb04a6963529695c367957da0\",\"urls\":[\"bzz-raw://92bb093eaedd8e518868b55992148dab5f472818fb9e07a15544a61141562900\",\"dweb:/ipfs/Qmav4vY5qJfRSvwJNNSA5zTTbu8sfJtBj3wDRDuaQEUDpv\"]},\"project:/contracts/TigerMinting.sol\":{\"keccak256\":\"0x0d9369f4acf5498e196c3da1c440f7367fd1e9ee458907e586c609e8298d6948\",\"urls\":[\"bzz-raw://fd8024262f0ec9c35fe6f0909d11a11520de7eaae06ab6c960289086790abddd\",\"dweb:/ipfs/QmbcQUgXdYRnm8ogNfeN8EjvUi2ziB6sQM74bDizN516qX\"]},\"project:/contracts/TigerOwnership.sol\":{\"keccak256\":\"0x954e32f3e454d532459b3427d808ac457e63bf778ee9b902145a7db32c1fee24\",\"urls\":[\"bzz-raw://f8106edc5456c9e2fdb3b75d937c4ad9cc04c1897644c83f515f9a32b0d2f3b4\",\"dweb:/ipfs/QmZvWrzhwvUozLQQqbW8gqhdepdFfR8U3nMvtu1HJMgiBv\"]},\"project:/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xe54f31fd26ed6ceca6e11d8779557e56811d3dde2aa1b8e52a48a2fbfeca7187\",\"urls\":[\"bzz-raw://8fa1c142bf78179d084f8d3a4f2dfe396ae489af77acf14a7db6faa97561f32b\",\"dweb:/ipfs/QmPFNcASpUxkBFQ7xTdkA44DNqZihmcf3QiRf7hXm9Zupr\"]},\"project:/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0x4e9fe8e4e3c9cc5092ccdaee7a68117b817f89281540b91585d1f03a3c45bb7e\",\"urls\":[\"bzz-raw://e00d8b20a4fb8ba1d9585883a2b7470bf56b8eb5e0c857379710ba6c258f6258\",\"dweb:/ipfs/QmeUjuzy59Fgk3162quG1nG4tjF2HzcwiC1n6kaLhYJbgW\"]},\"project:/contracts/interfaces/IERC721Receiver.sol\":{\"keccak256\":\"0x0511fb3c896ea76306615158bd130dbba5ba84b0c5ada0486fa2cd2a6ac7328c\",\"urls\":[\"bzz-raw://8b714c253e97fed026b5c1ec728b3f47156bfd91c2f048f968aa91c652ee8f34\",\"dweb:/ipfs/QmUXspdxvcdghKNX4UccnDti4CNP8iW1ZerkLYdfmBemDn\"]},\"project:/contracts/utils/Ownable.sol\":{\"keccak256\":\"0xcf906bc89e8cfe6765436883803f03908a874e24e39ac6f4d5da68e329e14ae6\",\"urls\":[\"bzz-raw://52cdc51f410e4727e1346c0604568a2aee7bfa79b51ff81aa4f80d9f75a2dd5a\",\"dweb:/ipfs/QmXSf9xvKZzdY5oQ9HLb1MARJoPcwAtef21w27ot95FCEF\"]},\"project:/contracts/utils/SafeMath.sol\":{\"keccak256\":\"0x703948e825762bb55bbff9168837febaabca2d200abf8ee76f194e8b3f045a49\",\"urls\":[\"bzz-raw://f5d43d79bfc0c7ce1c56060f60b450bd69b957bf46c5822f968c292d2b1d9994\",\"dweb:/ipfs/Qmc48jQK4mxQVHAt7ia2fmquiFArUnoYBgPpbEKc7XUqFy\"]}},\"version\":1}",
  "bytecode": "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3612f47806100ae6000396000f3fe6080604052600436106101815760003560e01c8063810c9236116100d1578063a9059cbb1161008a578063b88d4fde11610064578063b88d4fde146109dd578063d9ecad7b14610aef578063e985e9c514610b27578063f2fde38b14610bb057610181565b8063a9059cbb1461092c578063b30387a414610987578063b4834330146109b257610181565b8063810c9236146106c45780638462151c146107135780638da5cb5b146107b95780638f32d59b1461081057806395d89b411461083f578063a22cb465146108cf57610181565b80632f745c591161013e5780634f6ccce7116101185780634f6ccce71461057e5780636352211e146105cd57806370a0823114610648578063715018a6146106ad57610181565b80632f745c591461040457806342842e0e1461047357806349ae8dc3146104ee57610181565b806301ffc9a71461018657806306fdde03146101f8578063081812fc14610288578063095ea7b31461030357806318160ddd1461035e57806323b872dd14610389575b600080fd5b34801561019257600080fd5b506101de600480360360208110156101a957600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610c01565b604051808215151515815260200191505060405180910390f35b34801561020457600080fd5b5061020d610ca1565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561024d578082015181840152602081019050610232565b50505050905090810190601f16801561027a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561029457600080fd5b506102c1600480360360208110156102ab57600080fd5b8101908080359060200190929190505050610cda565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561030f57600080fd5b5061035c6004803603604081101561032657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d75565b005b34801561036a57600080fd5b50610373610f35565b6040518082815260200191505060405180910390f35b34801561039557600080fd5b50610402600480360360608110156103ac57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f42565b005b34801561041057600080fd5b5061045d6004803603604081101561042757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611049565b6040518082815260200191505060405180910390f35b34801561047f57600080fd5b506104ec6004803603606081101561049657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506110ec565b005b3480156104fa57600080fd5b506105276004803603602081101561051157600080fd5b810190808035906020019092919050505061110c565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561056a57808201518184015260208101905061054f565b505050509050019250505060405180910390f35b34801561058a57600080fd5b506105b7600480360360208110156105a157600080fd5b810190808035906020019092919050505061117c565b6040518082815260200191505060405180910390f35b3480156105d957600080fd5b50610606600480360360208110156105f057600080fd5b8101908080359060200190929190505050611202565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561065457600080fd5b506106976004803603602081101561066b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112ca565b6040518082815260200191505060405180910390f35b3480156106b957600080fd5b506106c2611398565b005b3480156106d057600080fd5b506106fd600480360360208110156106e757600080fd5b81019080803590602001909291905050506114d1565b6040518082815260200191505060405180910390f35b34801561071f57600080fd5b506107626004803603602081101561073657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115f8565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156107a557808201518184015260208101905061078a565b505050509050019250505060405180910390f35b3480156107c557600080fd5b506107ce6117e2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561081c57600080fd5b5061082561180b565b604051808215151515815260200191505060405180910390f35b34801561084b57600080fd5b50610854611862565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610894578082015181840152602081019050610879565b50505050905090810190601f1680156108c15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156108db57600080fd5b5061092a600480360360408110156108f257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080351515906020019092919050505061189b565b005b34801561093857600080fd5b506109856004803603604081101561094f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611a3e565b005b34801561099357600080fd5b5061099c611a4d565b6040518082815260200191505060405180910390f35b3480156109be57600080fd5b506109c7611a53565b6040518082815260200191505060405180910390f35b3480156109e957600080fd5b50610aed60048036036080811015610a0057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610a6757600080fd5b820183602082011115610a7957600080fd5b80359060200191846001830284011164010000000083111715610a9b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611a59565b005b610b2560048036036040811015610b0557600080fd5b810190808035906020019092919080359060200190929190505050611b62565b005b348015610b3357600080fd5b50610b9660048036036040811015610b4a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f0a565b604051808215151515815260200191505060405180910390f35b348015610bbc57600080fd5b50610bff60048036036020811015610bd357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f9e565b005b60006380ac58cd60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610c9a57506301ffc9a760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6040518060400160405280600c81526020017f43727970746f546967657273000000000000000000000000000000000000000081525081565b6000610ce582612024565b610d3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612e8b6024913960400191505060405180910390fd5b6003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610d8082611202565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e24576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f617070726f76616c20746f2063757272656e74206f776e65720000000000000081525060200191505060405180910390fd5b610e2e3383612096565b610e83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180612e356030913960400191505060405180910390fd5b826003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000600180549050905090565b610f4b81612024565b610fbd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f6e6578697374656e7420746f6b656e00000000000000000000000000000081525060200191505060405180910390fd5b610fc733826120d7565b611039576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f6e6f7420617574686f72697a656400000000000000000000000000000000000081525060200191505060405180910390fd5b61104483838361216c565b505050565b6000611054836112ca565b82106110c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f696e646578206f7574206f6620626f756e64730000000000000000000000000081525060200191505060405180910390fd5b6110d1836115f8565b82815181106110dc57fe5b6020026020010151905092915050565b61110783838360405180602001604052806000815250611a59565b505050565b6060806005600084815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561116c57602002820191906000526020600020905b815481526020019060010190808311611158575b5050505050905080915050919050565b6000611186610f35565b82106111fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f696e646578206f7574206f6620626f756e64730000000000000000000000000081525060200191505060405180910390fd5b819050919050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156112c1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612ef26021913960400191505060405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611351576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612ed06022913960400191505060405180910390fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6113a061180b565b611412576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60006114db61180b565b61154d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6103e8600754106115c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4c696d69742067656e302072656163686564000000000000000000000000000081525060200191505060405180910390fd5b6115dc600160075461249190919063ffffffff16565b6007819055506115f160008060008533612519565b9050919050565b6060600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561169d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f546f6b656e20717565727920666f7220746865207a65726f206164647265737381525060200191505060405180910390fd5b60006116a8836112ca565b905060008114156116ec5760006040519080825280602002602001820160405280156116e35781602001602082028038833980820191505090505b509150506117dd565b60608160405190808252806020026020018201604052801561171d5781602001602082028038833980820191505090505b509050600061172a610f35565b9050600080905060008090505b8281116117d4578673ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156117c757808483815181106117b257fe5b60200260200101818152505081806001019250505b8080600101915050611737565b83955050505050505b919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6040518060400160405280600581526020017f544947455200000000000000000000000000000000000000000000000000000081525081565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561193d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f617070726f76616c20746f2063616c6c6572000000000000000000000000000081525060200191505060405180910390fd5b80600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b611a493383836110ec565b5050565b60075481565b6103e881565b611a6282612024565b611ad4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f6e6578697374656e7420746f6b656e00000000000000000000000000000081525060200191505060405180910390fd5b611ade33836120d7565b611b50576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f6e6f7420617574686f72697a656400000000000000000000000000000000000081525060200191505060405180910390fd5b611b5c848484846126f3565b50505050565b611b6c3383612096565b611bde576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4e6f74206f776e2074696765720000000000000000000000000000000000000081525060200191505060405180910390fd5b611be83382612096565b611c5a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4e6f74206f776e2074696765720000000000000000000000000000000000000081525060200191505060405180910390fd5b80821415611cd0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4c65742773206e6f7420646f207468697300000000000000000000000000000081525060200191505060405180910390fd5b600060018381548110611cdf57fe5b90600052602060002090600202019050600060018381548110611cfe57fe5b906000526020600020906002020190506000611d2283600001548360000154612782565b90506000611d6f6001611d618660010160109054906101000a900461ffff1661ffff168660010160109054906101000a900461ffff1661ffff166128e2565b61249190919063ffffffff16565b90506000611d808787848633612519565b905060056000878152602001908152602001600020819080600181540180825580915050906001820390600052602060002001600090919290919091505550600560008881526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055506000731df62f291b2e969fb0849d99d9ce41e2f137006e90508073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015611e5b573d6000803e3d6000fd5b507fdc61f0416435ae80883e240d6a3d22cb6e02a631226cf7b8f2f9106120d2a30c338360405180806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828103825260058152602001807f4272656564000000000000000000000000000000000000000000000000000000815250602001935050505060405180910390a15050505050505050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b611fa661180b565b612018576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b612021816128fc565b50565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b60008273ffffffffffffffffffffffffffffffffffffffff166120b883611202565b73ffffffffffffffffffffffffffffffffffffffff1614905092915050565b6000806120e383611202565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061215257508373ffffffffffffffffffffffffffffffffffffffff1661213a84610cda565b73ffffffffffffffffffffffffffffffffffffffff16145b8061216357506121628185611f0a565b5b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561220f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f7472616e7366657220746f20746865207a65726f20616464726573730000000081525060200191505060405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561224857600080fd5b61229b6001600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461249190919063ffffffff16565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612431576123b76001600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612a4090919063ffffffff16565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506003600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60008082840190508381101561250f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000612523612dc8565b6040518060a001604052808581526020014267ffffffffffffffff1681526020018863ffffffff1681526020018763ffffffff1681526020018661ffff168152509050600061265460018084908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060408201518160010160086101000a81548163ffffffff021916908363ffffffff160217905550606082015181600101600c6101000a81548163ffffffff021916908363ffffffff16021790555060808201518160010160106101000a81548161ffff021916908361ffff1602179055505050612a4090919063ffffffff16565b90507f0a5311bd2a6608f08a180df2ee7c5946819a649b204b554bb8e39825b2c50ad584828a8a89604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020018381526020018281526020019550505050505060405180910390a16126e56000858361216c565b809250505095945050505050565b6126fe84848461216c565b61270a84848484612a8a565b61277c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f7472616e7366657220746f206e6f6e204552433732315265636569766572000081525060200191505060405180910390fd5b50505050565b600061278c612e11565b6000612796612c5d565b90506000600790506000600190505b60808111612837576000818460ff1616146127e557606487816127c457fe5b0660ff16848360ff16600881106127d757fe5b60200201818152505061280c565b606486816127ef57fe5b0660ff16848360ff166008811061280257fe5b6020020181815250505b6064878161281657fe5b0496506064868161282357fe5b0495506001820391506002810290506127a5565b50600060078360ff168161284757fe5b06905060638360ff168161285757fe5b0660ff16848260ff166008811061286a57fe5b602002018181525050600080600090505b60088110156128d3576128a786826008811061289357fe5b60200201518361249190919063ffffffff16565b9150600781146128c8576128c5606483612c6f90919063ffffffff16565b91505b60018101905061287b565b50809550505050505092915050565b6000818310156128f257816128f4565b825b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612982576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612e656026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000612a8283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612cf5565b905092915050565b6000612a9584612db5565b612aa25760019050612c55565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612b7d578082015181840152602081019050612b62565b50505050905090810190601f168015612baa5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015612bcc57600080fd5b505af1158015612be0573d6000803e3d6000fd5b505050506040513d6020811015612bf657600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b600060ff4281612c6957fe5b06905090565b600080831415612c825760009050612cef565b6000828402905082848281612c9357fe5b0414612cea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612eaf6021913960400191505060405180910390fd5b809150505b92915050565b6000838311158290612da2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612d67578082015181840152602081019050612d4c565b50505050905090810190601f168015612d945780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080823b905060008111915050919050565b6040518060a0016040528060008152602001600067ffffffffffffffff168152602001600063ffffffff168152602001600063ffffffff168152602001600061ffff1681525090565b60405180610100016040528060089060208202803883398082019150509050509056fe617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373617070726f76656420717565727920666f72206e6f6e6578697374656e74207469676572536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7742616c616e636520717565727920666f7220746865207a65726f20616464726573734f776e657220717565727920666f72206e6f6e6578697374656e74207469676572a265627a7a723158205aeb2f3dad5cb5393aae9062d991eec4879e8c210fbf9f4b452eebdd95da2f5f64736f6c63430005100032",
  "deployedBytecode": "0x6080604052600436106101815760003560e01c8063810c9236116100d1578063a9059cbb1161008a578063b88d4fde11610064578063b88d4fde146109dd578063d9ecad7b14610aef578063e985e9c514610b27578063f2fde38b14610bb057610181565b8063a9059cbb1461092c578063b30387a414610987578063b4834330146109b257610181565b8063810c9236146106c45780638462151c146107135780638da5cb5b146107b95780638f32d59b1461081057806395d89b411461083f578063a22cb465146108cf57610181565b80632f745c591161013e5780634f6ccce7116101185780634f6ccce71461057e5780636352211e146105cd57806370a0823114610648578063715018a6146106ad57610181565b80632f745c591461040457806342842e0e1461047357806349ae8dc3146104ee57610181565b806301ffc9a71461018657806306fdde03146101f8578063081812fc14610288578063095ea7b31461030357806318160ddd1461035e57806323b872dd14610389575b600080fd5b34801561019257600080fd5b506101de600480360360208110156101a957600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610c01565b604051808215151515815260200191505060405180910390f35b34801561020457600080fd5b5061020d610ca1565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561024d578082015181840152602081019050610232565b50505050905090810190601f16801561027a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561029457600080fd5b506102c1600480360360208110156102ab57600080fd5b8101908080359060200190929190505050610cda565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561030f57600080fd5b5061035c6004803603604081101561032657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d75565b005b34801561036a57600080fd5b50610373610f35565b6040518082815260200191505060405180910390f35b34801561039557600080fd5b50610402600480360360608110156103ac57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f42565b005b34801561041057600080fd5b5061045d6004803603604081101561042757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611049565b6040518082815260200191505060405180910390f35b34801561047f57600080fd5b506104ec6004803603606081101561049657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506110ec565b005b3480156104fa57600080fd5b506105276004803603602081101561051157600080fd5b810190808035906020019092919050505061110c565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561056a57808201518184015260208101905061054f565b505050509050019250505060405180910390f35b34801561058a57600080fd5b506105b7600480360360208110156105a157600080fd5b810190808035906020019092919050505061117c565b6040518082815260200191505060405180910390f35b3480156105d957600080fd5b50610606600480360360208110156105f057600080fd5b8101908080359060200190929190505050611202565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561065457600080fd5b506106976004803603602081101561066b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112ca565b6040518082815260200191505060405180910390f35b3480156106b957600080fd5b506106c2611398565b005b3480156106d057600080fd5b506106fd600480360360208110156106e757600080fd5b81019080803590602001909291905050506114d1565b6040518082815260200191505060405180910390f35b34801561071f57600080fd5b506107626004803603602081101561073657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115f8565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156107a557808201518184015260208101905061078a565b505050509050019250505060405180910390f35b3480156107c557600080fd5b506107ce6117e2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561081c57600080fd5b5061082561180b565b604051808215151515815260200191505060405180910390f35b34801561084b57600080fd5b50610854611862565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610894578082015181840152602081019050610879565b50505050905090810190601f1680156108c15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156108db57600080fd5b5061092a600480360360408110156108f257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080351515906020019092919050505061189b565b005b34801561093857600080fd5b506109856004803603604081101561094f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611a3e565b005b34801561099357600080fd5b5061099c611a4d565b6040518082815260200191505060405180910390f35b3480156109be57600080fd5b506109c7611a53565b6040518082815260200191505060405180910390f35b3480156109e957600080fd5b50610aed60048036036080811015610a0057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610a6757600080fd5b820183602082011115610a7957600080fd5b80359060200191846001830284011164010000000083111715610a9b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611a59565b005b610b2560048036036040811015610b0557600080fd5b810190808035906020019092919080359060200190929190505050611b62565b005b348015610b3357600080fd5b50610b9660048036036040811015610b4a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f0a565b604051808215151515815260200191505060405180910390f35b348015610bbc57600080fd5b50610bff60048036036020811015610bd357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f9e565b005b60006380ac58cd60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610c9a57506301ffc9a760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6040518060400160405280600c81526020017f43727970746f546967657273000000000000000000000000000000000000000081525081565b6000610ce582612024565b610d3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612e8b6024913960400191505060405180910390fd5b6003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610d8082611202565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e24576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f617070726f76616c20746f2063757272656e74206f776e65720000000000000081525060200191505060405180910390fd5b610e2e3383612096565b610e83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180612e356030913960400191505060405180910390fd5b826003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000600180549050905090565b610f4b81612024565b610fbd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f6e6578697374656e7420746f6b656e00000000000000000000000000000081525060200191505060405180910390fd5b610fc733826120d7565b611039576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f6e6f7420617574686f72697a656400000000000000000000000000000000000081525060200191505060405180910390fd5b61104483838361216c565b505050565b6000611054836112ca565b82106110c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f696e646578206f7574206f6620626f756e64730000000000000000000000000081525060200191505060405180910390fd5b6110d1836115f8565b82815181106110dc57fe5b6020026020010151905092915050565b61110783838360405180602001604052806000815250611a59565b505050565b6060806005600084815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561116c57602002820191906000526020600020905b815481526020019060010190808311611158575b5050505050905080915050919050565b6000611186610f35565b82106111fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f696e646578206f7574206f6620626f756e64730000000000000000000000000081525060200191505060405180910390fd5b819050919050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156112c1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612ef26021913960400191505060405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611351576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612ed06022913960400191505060405180910390fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6113a061180b565b611412576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60006114db61180b565b61154d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6103e8600754106115c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4c696d69742067656e302072656163686564000000000000000000000000000081525060200191505060405180910390fd5b6115dc600160075461249190919063ffffffff16565b6007819055506115f160008060008533612519565b9050919050565b6060600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561169d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f546f6b656e20717565727920666f7220746865207a65726f206164647265737381525060200191505060405180910390fd5b60006116a8836112ca565b905060008114156116ec5760006040519080825280602002602001820160405280156116e35781602001602082028038833980820191505090505b509150506117dd565b60608160405190808252806020026020018201604052801561171d5781602001602082028038833980820191505090505b509050600061172a610f35565b9050600080905060008090505b8281116117d4578673ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156117c757808483815181106117b257fe5b60200260200101818152505081806001019250505b8080600101915050611737565b83955050505050505b919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6040518060400160405280600581526020017f544947455200000000000000000000000000000000000000000000000000000081525081565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561193d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f617070726f76616c20746f2063616c6c6572000000000000000000000000000081525060200191505060405180910390fd5b80600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b611a493383836110ec565b5050565b60075481565b6103e881565b611a6282612024565b611ad4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f6e6578697374656e7420746f6b656e00000000000000000000000000000081525060200191505060405180910390fd5b611ade33836120d7565b611b50576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f6e6f7420617574686f72697a656400000000000000000000000000000000000081525060200191505060405180910390fd5b611b5c848484846126f3565b50505050565b611b6c3383612096565b611bde576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4e6f74206f776e2074696765720000000000000000000000000000000000000081525060200191505060405180910390fd5b611be83382612096565b611c5a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4e6f74206f776e2074696765720000000000000000000000000000000000000081525060200191505060405180910390fd5b80821415611cd0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4c65742773206e6f7420646f207468697300000000000000000000000000000081525060200191505060405180910390fd5b600060018381548110611cdf57fe5b90600052602060002090600202019050600060018381548110611cfe57fe5b906000526020600020906002020190506000611d2283600001548360000154612782565b90506000611d6f6001611d618660010160109054906101000a900461ffff1661ffff168660010160109054906101000a900461ffff1661ffff166128e2565b61249190919063ffffffff16565b90506000611d808787848633612519565b905060056000878152602001908152602001600020819080600181540180825580915050906001820390600052602060002001600090919290919091505550600560008881526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055506000731df62f291b2e969fb0849d99d9ce41e2f137006e90508073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015611e5b573d6000803e3d6000fd5b507fdc61f0416435ae80883e240d6a3d22cb6e02a631226cf7b8f2f9106120d2a30c338360405180806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828103825260058152602001807f4272656564000000000000000000000000000000000000000000000000000000815250602001935050505060405180910390a15050505050505050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b611fa661180b565b612018576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b612021816128fc565b50565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b60008273ffffffffffffffffffffffffffffffffffffffff166120b883611202565b73ffffffffffffffffffffffffffffffffffffffff1614905092915050565b6000806120e383611202565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061215257508373ffffffffffffffffffffffffffffffffffffffff1661213a84610cda565b73ffffffffffffffffffffffffffffffffffffffff16145b8061216357506121628185611f0a565b5b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561220f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f7472616e7366657220746f20746865207a65726f20616464726573730000000081525060200191505060405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561224857600080fd5b61229b6001600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461249190919063ffffffff16565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612431576123b76001600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612a4090919063ffffffff16565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506003600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60008082840190508381101561250f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000612523612dc8565b6040518060a001604052808581526020014267ffffffffffffffff1681526020018863ffffffff1681526020018763ffffffff1681526020018661ffff168152509050600061265460018084908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060408201518160010160086101000a81548163ffffffff021916908363ffffffff160217905550606082015181600101600c6101000a81548163ffffffff021916908363ffffffff16021790555060808201518160010160106101000a81548161ffff021916908361ffff1602179055505050612a4090919063ffffffff16565b90507f0a5311bd2a6608f08a180df2ee7c5946819a649b204b554bb8e39825b2c50ad584828a8a89604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020018381526020018281526020019550505050505060405180910390a16126e56000858361216c565b809250505095945050505050565b6126fe84848461216c565b61270a84848484612a8a565b61277c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f7472616e7366657220746f206e6f6e204552433732315265636569766572000081525060200191505060405180910390fd5b50505050565b600061278c612e11565b6000612796612c5d565b90506000600790506000600190505b60808111612837576000818460ff1616146127e557606487816127c457fe5b0660ff16848360ff16600881106127d757fe5b60200201818152505061280c565b606486816127ef57fe5b0660ff16848360ff166008811061280257fe5b6020020181815250505b6064878161281657fe5b0496506064868161282357fe5b0495506001820391506002810290506127a5565b50600060078360ff168161284757fe5b06905060638360ff168161285757fe5b0660ff16848260ff166008811061286a57fe5b602002018181525050600080600090505b60088110156128d3576128a786826008811061289357fe5b60200201518361249190919063ffffffff16565b9150600781146128c8576128c5606483612c6f90919063ffffffff16565b91505b60018101905061287b565b50809550505050505092915050565b6000818310156128f257816128f4565b825b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612982576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612e656026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000612a8283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612cf5565b905092915050565b6000612a9584612db5565b612aa25760019050612c55565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612b7d578082015181840152602081019050612b62565b50505050905090810190601f168015612baa5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015612bcc57600080fd5b505af1158015612be0573d6000803e3d6000fd5b505050506040513d6020811015612bf657600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b600060ff4281612c6957fe5b06905090565b600080831415612c825760009050612cef565b6000828402905082848281612c9357fe5b0414612cea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612eaf6021913960400191505060405180910390fd5b809150505b92915050565b6000838311158290612da2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612d67578082015181840152602081019050612d4c565b50505050905090810190601f168015612d945780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080823b905060008111915050919050565b6040518060a0016040528060008152602001600067ffffffffffffffff168152602001600063ffffffff168152602001600063ffffffff168152602001600061ffff1681525090565b60405180610100016040528060089060208202803883398082019150509050509056fe617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373617070726f76656420717565727920666f72206e6f6e6578697374656e74207469676572536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7742616c616e636520717565727920666f7220746865207a65726f20616464726573734f776e657220717565727920666f72206e6f6e6578697374656e74207469676572a265627a7a723158205aeb2f3dad5cb5393aae9062d991eec4879e8c210fbf9f4b452eebdd95da2f5f64736f6c63430005100032",
  "sourceMap": "154:714:4:-;;;667:10:9;658:6;;:19;;;;;;;;;;;;;;;;;;725:10;692:44;;721:1;692:44;;;;;;;;;;;;154:714:4;;;;;;",
  "deployedSourceMap": "154:714:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1290:219:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1290:219:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1290:219:5;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;356:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;356:44:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;356:44:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10994:198;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10994:198:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10994:198:5;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;9707:390;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9707:390:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9707:390:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;11918:91;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11918:91:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8728:283;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8728:283:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8728:283:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14301:240;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14301:240:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14301:240:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7043:168;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7043:168:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7043:168:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2902:167:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2902:167:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2902:167:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2902:167:2;;;;;;;;;;;;;;;;;12265:164:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12265:164:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12265:164:5;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2283:221;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2283:221:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2283:221:5;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1827:192;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1827:192:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1827:192:5;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1602:137:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1602:137:9;;;:::i;:::-;;611:255:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;611:255:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;611:255:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;12957:763:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12957:763:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12957:763:5;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12957:763:5;;;;;;;;;;;;;;;;;819:77:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;819:77:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1170:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1170:90:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;406:39:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;406:39:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;406:39:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10417:267;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10417:267:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10417:267:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9237:118;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9237:118:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9237:118:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;407:24:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;407:24:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;276:50;;8:9:-1;5:2;;;30:1;27;20:12;5:2;276:50:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7717:326:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7717:326:5;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7717:326:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7717:326:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7717:326:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7717:326:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7717:326:5;;;;;;;;;;;;;;;:::i;:::-;;1830:916:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1830:916:2;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;11473:177:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11473:177:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11473:177:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1888:107:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1888:107:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1888:107:9;;;;;;;;;;;;;;;;;;;:::i;:::-;;1290:219:5;1385:4;827:10;1429:20;;1413:36;;;:12;:36;;;;:88;;;;890:10;1481:20;;1465:36;;;:12;:36;;;;1413:88;1405:97;;1290:219;;;:::o;356:44::-;;;;;;;;;;;;;;;;;;;:::o;10994:198::-;11054:7;11081:17;11089:8;11081:7;:17::i;:::-;11073:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11157:18;:28;11176:8;11157:28;;;;;;;;;;;;;;;;;;;;;11150:35;;10994:198;;;:::o;9707:390::-;9772:14;9789:17;9797:8;9789:7;:17::i;:::-;9772:34;;9831:6;9824:13;;:3;:13;;;;9816:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9898:27;9904:10;9916:8;9898:5;:27::i;:::-;9877:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10041:3;10010:18;:28;10029:8;10010:28;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;10081:8;10076:3;10059:31;;10068:6;10059:31;;;;;;;;;;;;9707:390;;;:::o;11918:91::-;11962:7;11988;:14;;;;11981:21;;11918:91;:::o;8728:283::-;8851:17;8859:8;8851:7;:17::i;:::-;8843:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8908:35;8922:10;8934:8;8908:13;:35::i;:::-;8900:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8973:31;8983:5;8990:3;8995:8;8973:9;:31::i;:::-;8728:283;;;:::o;14301:240::-;14407:7;14447:17;14457:6;14447:9;:17::i;:::-;14438:6;:26;14430:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14505:21;14519:6;14505:13;:21::i;:::-;14527:6;14505:29;;;;;;;;;;;;;;14498:36;;14301:240;;;;:::o;7043:168::-;7162:42;7179:5;7186:3;7191:8;7162:42;;;;;;;;;;;;:16;:42::i;:::-;7043:168;;;:::o;2902:167:2:-;2959:16;2985:25;3013:16;:26;3030:8;3013:26;;;;;;;;;;;2985:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3054:8;3047:15;;;2902:167;;;:::o;12265:164:5:-;12326:7;12362:13;:11;:13::i;:::-;12353:6;:22;12345:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12416:6;12409:13;;12265:164;;;:::o;2283:221::-;2339:7;2358:13;2374:15;:25;2390:8;2374:25;;;;;;;;;;;;;;;;;;;;;2358:41;;2434:1;2417:19;;:5;:19;;;;2409:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2492:5;2485:12;;;2283:221;;;:::o;1827:192::-;1883:7;1928:1;1910:20;;:6;:20;;;;1902:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1987:17;:25;2005:6;1987:25;;;;;;;;;;;;;;;;1980:32;;1827:192;;;:::o;1602:137:9:-;1023:9;:7;:9::i;:::-;1015:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1700:1;1663:40;;1684:6;;;;;;;;;;;1663:40;;;;;;;;;;;;1730:1;1713:6;;:19;;;;;;;;;;;;;;;;;;1602:137::o;611:255:4:-;680:7;1023:9:9;:7;:9::i;:::-;1015:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;322:4:4;707:9;;:31;699:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;784:16;798:1;784:9;;:13;;:16;;;;:::i;:::-;772:9;:28;;;;818:41;831:1;834;837;840:6;848:10;818:12;:41::i;:::-;811:48;;611:255;;;:::o;12957:763:5:-;13041:16;13099:1;13081:20;;:6;:20;;;;13073:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13149:18;13170:17;13180:6;13170:9;:17::i;:::-;13149:38;;13216:1;13202:10;:15;13198:106;;;13291:1;13277:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;13277:16:5;;;;13270:23;;;;;13198:106;13314:23;13354:10;13340:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;13340:25:5;;;;13314:51;;13375:19;13397:13;:11;:13::i;:::-;13375:35;;13420:19;13442:1;13420:23;;13454:15;13495:1;13485:11;;13480:210;13509:11;13498:7;:22;13480:210;;13579:6;13551:34;;:15;:24;13567:7;13551:24;;;;;;;;;;;;;;;;;;;;;:34;;;13547:133;;;13627:7;13605:6;13612:11;13605:19;;;;;;;;;;;;;:29;;;;;13652:13;;;;;;;13547:133;13522:9;;;;;;;13480:210;;;13707:6;13700:13;;;;;;;12957:763;;;;:::o;819:77:9:-;857:7;883:6;;;;;;;;;;;876:13;;819:77;:::o;1170:90::-;1210:4;1247:6;;;;;;;;;;;1233:20;;:10;:20;;;1226:27;;1170:90;:::o;406:39:5:-;;;;;;;;;;;;;;;;;;;:::o;10417:267::-;10517:10;10504:23;;:9;:23;;;;10496:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10605:9;10561:18;:30;10580:10;10561:30;;;;;;;;;;;;;;;:41;10592:9;10561:41;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;10656:9;10629:48;;10644:10;10629:48;;;10667:9;10629:48;;;;;;;;;;;;;;;;;;;;;;10417:267;;:::o;9237:118::-;9305:43;9322:10;9334:3;9339:8;9305:16;:43::i;:::-;9237:118;;:::o;407:24:4:-;;;;:::o;276:50::-;322:4;276:50;:::o;7717:326:5:-;7872:17;7880:8;7872:7;:17::i;:::-;7864:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7929:35;7943:10;7955:8;7929:13;:35::i;:::-;7921:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7994:42;8008:5;8015:3;8020:8;8030:5;7994:13;:42::i;:::-;7717:326;;;;:::o;1830:916:2:-;1910:25;1916:10;1928:6;1910:5;:25::i;:::-;1902:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1969:25;1975:10;1987:6;1969:5;:25::i;:::-;1961:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2038:6;2028;:16;;2020:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2075:17;2095:7;2103:6;2095:15;;;;;;;;;;;;;;;;;;2075:35;;2118:17;2138:7;2146:6;2138:15;;;;;;;;;;;;;;;;;;2118:35;;2168:15;2186:29;2194:3;:9;;;2205:3;:9;;;2186:7;:29::i;:::-;2168:47;;2223:19;2245:42;2285:1;2245:35;2249:3;:14;;;;;;;;;;;;2245:35;;2265:3;:14;;;;;;;;;;;;2245:35;;:3;:35::i;:::-;:39;;:42;;;;:::i;:::-;2223:64;;2296:18;2317:110;2339:6;2355;2371:11;2392:7;2409:10;2317:12;:110::i;:::-;2296:131;;2436:16;:24;2453:6;2436:24;;;;;;;;;;;2466:10;2436:41;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2436:41:2;;;;;;;;;;;;;;;;;;;;;;2485:16;:24;2502:6;2485:24;;;;;;;;;;;2515:10;2485:41;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2485:41:2;;;;;;;;;;;;;;;;;;;;;;2535:27;2565:42;2535:72;;2616:11;:20;;:31;2637:9;2616:31;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2616:31:2;2661:49;2687:10;2699;2661:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1830:916;;;;;;;;:::o;11473:177:5:-;11579:4;11606:18;:26;11625:6;11606:26;;;;;;;;;;;;;;;:37;11633:9;11606:37;;;;;;;;;;;;;;;;;;;;;;;;;11599:44;;11473:177;;;;:::o;1888:107:9:-;1023:9;:7;:9::i;:::-;1015:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1960:28;1979:8;1960:18;:28::i;:::-;1888:107;:::o;3164:158:5:-;3222:4;3238:13;3254:15;:25;3270:8;3254:25;;;;;;;;;;;;;;;;;;;;;3238:41;;3313:1;3296:19;;:5;:19;;;;3289:26;;;3164:158;;;:::o;2774:161::-;2872:4;2920:8;2899:29;;:17;2907:8;2899:7;:17::i;:::-;:29;;;2892:36;;2774:161;;;;:::o;4282:303::-;4388:4;4408:14;4425:17;4433:8;4425:7;:17::i;:::-;4408:34;;4472:6;4460:18;;:8;:18;;;:67;;;;4519:8;4494:33;;:21;4506:8;4494:11;:21::i;:::-;:33;;;4460:67;:117;;;;4543:34;4560:6;4568:8;4543:16;:34::i;:::-;4460:117;4452:126;;;4282:303;;;;:::o;3441:537:1:-;3578:1;3563:17;;:3;:17;;;;3555:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3646:4;3631:20;;:3;:20;;;;3623:29;;;;;;3688;3715:1;3688:17;:22;3706:3;3688:22;;;;;;;;;;;;;;;;:26;;:29;;;;:::i;:::-;3663:17;:22;3681:3;3663:22;;;;;;;;;;;;;;;:54;;;;3755:3;3727:15;:25;3743:8;3727:25;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;3790:1;3773:19;;:5;:19;;;3769:157;;3835:31;3864:1;3835:17;:24;3853:5;3835:24;;;;;;;;;;;;;;;;:28;;:31;;;;:::i;:::-;3808:17;:24;3826:5;3808:24;;;;;;;;;;;;;;;:58;;;;3887:18;:28;3906:8;3887:28;;;;;;;;;;;;3880:35;;;;;;;;;;;3769:157;3962:8;3957:3;3941:30;;3950:5;3941:30;;;;;;;;;;;;3441:537;;;:::o;834:176:10:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;4447:630:1:-;4618:7;4637:19;;:::i;:::-;4659:207;;;;;;;;4686:6;4659:207;;;;4724:15;4659:207;;;;;;4768:6;4659:207;;;;;;4803:6;4659:207;;;;;;4843:11;4659:207;;;;;4637:229;;4877:18;4898:27;4923:1;4898:7;4911:6;4898:20;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;4898:20:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:24;;:27;;;;:::i;:::-;4877:48;;4941:49;4947:6;4955:10;4967:6;4975;4983;4941:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5001:41;5019:1;5023:6;5031:10;5001:9;:41::i;:::-;5060:10;5053:17;;;;4447:630;;;;;;;:::o;6036:322:5:-;6182:31;6192:5;6199:3;6204:8;6182:9;:31::i;:::-;6244:51;6267:5;6274:3;6279:8;6289:5;6244:22;:51::i;:::-;6223:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6036:322;;;;:::o;682:992:2:-;752:7;769:28;;:::i;:::-;805:13;821:12;:10;:12::i;:::-;805:28;;841:11;855:1;841:15;;913:9;925:1;913:13;;908:403;933:3;928:1;:8;908:403;;1082:1;1077;1067:7;:11;;;:16;1063:154;;1133:3;1125:5;:11;;;;;;1099:38;;:10;1110:5;1099:17;;;;;;;;;;;;:38;;;;;1063:154;;;1202:3;1194:5;:11;;;;;;1168:38;;:10;1179:5;1168:17;;;;;;;;;;;;:38;;;;;1063:154;1243:3;1235:5;:11;;;;;;1227:19;;1272:3;1264:5;:11;;;;;;1256:19;;1301:1;1293:5;:9;1285:17;;946:1;942;:5;938:9;;908:403;;;;1369:18;1400:1;1390:7;:11;;;;;;;;1369:32;;1446:2;1436:7;:12;;;;;;;;1409:39;;:10;1420:12;1409:24;;;;;;;;;;;;:39;;;;;1457:15;1486:9;1498:1;1486:13;;1481:164;1505:1;1501;:5;1481:164;;;1539:26;1551:10;1562:1;1551:13;;;;;;;;;;;1539:7;:11;;:26;;;;:::i;:::-;1529:36;;1585:1;1580;:6;1576:61;;1610:16;1622:3;1610:7;:11;;:16;;;;:::i;:::-;1600:26;;1576:61;1516:1;1512;:5;1508:9;;1481:164;;;;1660:7;1653:14;;;;;;;682:992;;;;:::o;513:105::-;571:7;602:1;597;:6;;:14;;610:1;597:14;;;606:1;597:14;590:21;;513:105;;;;:::o;2096:225:9:-;2189:1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2278:8;2249:38;;2270:6;;;;;;;;;;;2249:38;;;;;;;;;;;;2306:8;2297:6;;:17;;;;;;;;;;;;;;;;;;2096:225;:::o;1274:134:10:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;5112:447:5:-;5266:4;5287:16;5299:3;5287:11;:16::i;:::-;5282:59;;5326:4;5319:11;;;;5282:59;5351:17;5387:3;5371:37;;;5422:10;5446:5;5465:8;5487:5;5371:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5371:131:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5371:131:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5371:131:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5371:131:5;;;;;;;;;;;;;;;;5351:151;;687:10;5535:16;;5521:30;;;:10;:30;;;;5513:39;;;5112:447;;;;;;;:::o;355:92:2:-;400:5;436:3;430;:9;;;;;;417:23;;355:92;:::o;2159:459:10:-;2217:7;2463:1;2458;:6;2454:45;;;2487:1;2480:8;;;;2454:45;2509:9;2525:1;2521;:5;2509:17;;2553:1;2548;2544;:5;;;;;;:10;2536:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2610:1;2603:8;;;2159:459;;;;;:::o;1732:187::-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;3703:230:5:-;3765:4;3781:12;3883:8;3871:21;3863:29;;3925:1;3918:4;:8;3911:15;;;3703:230;;;:::o;154:714:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;154:714:4;;;;:::o",
  "source": "pragma solidity 0.5.16;\n\nimport \"./TigerBreeding.sol\";\n\n/**\n * @title The TigerMinting contract responsible to create tigers.\n * @author Andrew Ayson\n */\ncontract TigerMinting is TigerBreeding {\n    /// @dev Limits the number of tigers the contract owner can ever create.\n    uint256 public constant CREATION_LIMIT_GEN0 = 1000; \n\n    /// @dev Counts the number of tigers the contract owner has created.\n    uint256 public gen0Count;\n\n    /**\n     * @notice Creates a new gen0 tiger\n     * @dev Can only be called by owner and when limit has not be reached\n     * @return The id of the created tiger\n     */\n    function createGen0Tiger(uint256 _genes) external onlyOwner returns (uint256) {\n        require(gen0Count < CREATION_LIMIT_GEN0, \"Limit gen0 reached\");\n\n        gen0Count = gen0Count.add(1);\n\n        return _createTiger(0, 0, 0, _genes, msg.sender);\n    }\n}\n",
  "sourcePath": "/Users/bananaQ/Documents/own_projects/business/crypto_tigers/backend/contracts/TigerMinting.sol",
  "ast": {
    "absolutePath": "project:/contracts/TigerMinting.sol",
    "exportedSymbols": {
      "TigerMinting": [
        994
      ]
    },
    "id": 995,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 952,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "project:/contracts/TigerBreeding.sol",
        "file": "./TigerBreeding.sol",
        "id": 953,
        "nodeType": "ImportDirective",
        "scope": 995,
        "sourceUnit": 890,
        "src": "25:29:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 954,
              "name": "TigerBreeding",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 889,
              "src": "179:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TigerBreeding_$889",
                "typeString": "contract TigerBreeding"
              }
            },
            "id": 955,
            "nodeType": "InheritanceSpecifier",
            "src": "179:13:4"
          }
        ],
        "contractDependencies": [
          574,
          889,
          1581,
          1591,
          1694,
          1822
        ],
        "contractKind": "contract",
        "documentation": "@title The TigerMinting contract responsible to create tigers.\n@author Andrew Ayson",
        "fullyImplemented": true,
        "id": 994,
        "linearizedBaseContracts": [
          994,
          889,
          1581,
          1694,
          1591,
          574,
          1822
        ],
        "name": "TigerMinting",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 958,
            "name": "CREATION_LIMIT_GEN0",
            "nodeType": "VariableDeclaration",
            "scope": 994,
            "src": "276:50:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 956,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "276:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31303030",
              "id": 957,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "322:4:4",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000_by_1",
                "typeString": "int_const 1000"
              },
              "value": "1000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 960,
            "name": "gen0Count",
            "nodeType": "VariableDeclaration",
            "scope": 994,
            "src": "407:24:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 959,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "407:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 992,
              "nodeType": "Block",
              "src": "689:177:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 970,
                          "name": "gen0Count",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 960,
                          "src": "707:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 971,
                          "name": "CREATION_LIMIT_GEN0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 958,
                          "src": "719:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "707:31:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4c696d69742067656e302072656163686564",
                        "id": 973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "740:20:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_931e9a96823c341c5bd12de9f03918a69879d03c2a585f63033a7e064b342639",
                          "typeString": "literal_string \"Limit gen0 reached\""
                        },
                        "value": "Limit gen0 reached"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_931e9a96823c341c5bd12de9f03918a69879d03c2a585f63033a7e064b342639",
                          "typeString": "literal_string \"Limit gen0 reached\""
                        }
                      ],
                      "id": 969,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2027,
                        2028
                      ],
                      "referencedDeclaration": 2028,
                      "src": "699:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "699:62:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 975,
                  "nodeType": "ExpressionStatement",
                  "src": "699:62:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 976,
                      "name": "gen0Count",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 960,
                      "src": "772:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "798:1:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 977,
                          "name": "gen0Count",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 960,
                          "src": "784:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1849,
                        "src": "784:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "784:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "772:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 982,
                  "nodeType": "ExpressionStatement",
                  "src": "772:28:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "831:1:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "834:1:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "837:1:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "id": 987,
                        "name": "_genes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 962,
                        "src": "840:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 988,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2024,
                          "src": "848:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "848:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 983,
                      "name": "_createTiger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 573,
                      "src": "818:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256,address) returns (uint256)"
                      }
                    },
                    "id": 990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "818:41:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 968,
                  "id": 991,
                  "nodeType": "Return",
                  "src": "811:48:4"
                }
              ]
            },
            "documentation": "@notice Creates a new gen0 tiger\n@dev Can only be called by owner and when limit has not be reached\n@return The id of the created tiger",
            "id": 993,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 965,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 964,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1755,
                  "src": "661:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "661:9:4"
              }
            ],
            "name": "createGen0Tiger",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 962,
                  "name": "_genes",
                  "nodeType": "VariableDeclaration",
                  "scope": 993,
                  "src": "636:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 961,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "636:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "635:16:4"
            },
            "returnParameters": {
              "id": 968,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 967,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 993,
                  "src": "680:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 966,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "680:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "679:9:4"
            },
            "scope": 994,
            "src": "611:255:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 995,
        "src": "154:714:4"
      }
    ],
    "src": "0:869:4"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/TigerMinting.sol",
      "exportedSymbols": {
        "TigerMinting": [
          994
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.5",
            ".16"
          ]
        },
        "id": 952,
        "name": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "attributes": {
          "SourceUnit": 890,
          "absolutePath": "project:/contracts/TigerBreeding.sol",
          "file": "./TigerBreeding.sol",
          "scope": 995,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 953,
        "name": "ImportDirective",
        "src": "25:29:4"
      },
      {
        "attributes": {
          "contractDependencies": [
            574,
            889,
            1581,
            1591,
            1694,
            1822
          ],
          "contractKind": "contract",
          "documentation": "@title The TigerMinting contract responsible to create tigers.\n@author Andrew Ayson",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            994,
            889,
            1581,
            1694,
            1591,
            574,
            1822
          ],
          "name": "TigerMinting",
          "scope": 995
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "TigerBreeding",
                  "referencedDeclaration": 889,
                  "type": "contract TigerBreeding"
                },
                "id": 954,
                "name": "UserDefinedTypeName",
                "src": "179:13:4"
              }
            ],
            "id": 955,
            "name": "InheritanceSpecifier",
            "src": "179:13:4"
          },
          {
            "attributes": {
              "constant": true,
              "name": "CREATION_LIMIT_GEN0",
              "scope": 994,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 956,
                "name": "ElementaryTypeName",
                "src": "276:7:4"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "31303030",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "number",
                  "type": "int_const 1000",
                  "value": "1000"
                },
                "id": 957,
                "name": "Literal",
                "src": "322:4:4"
              }
            ],
            "id": 958,
            "name": "VariableDeclaration",
            "src": "276:50:4"
          },
          {
            "attributes": {
              "constant": false,
              "name": "gen0Count",
              "scope": 994,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 959,
                "name": "ElementaryTypeName",
                "src": "407:7:4"
              }
            ],
            "id": 960,
            "name": "VariableDeclaration",
            "src": "407:24:4"
          },
          {
            "attributes": {
              "documentation": "@notice Creates a new gen0 tiger\n@dev Can only be called by owner and when limit has not be reached\n@return The id of the created tiger",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "createGen0Tiger",
              "scope": 994,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_genes",
                      "scope": 993,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 961,
                        "name": "ElementaryTypeName",
                        "src": "636:7:4"
                      }
                    ],
                    "id": 962,
                    "name": "VariableDeclaration",
                    "src": "636:14:4"
                  }
                ],
                "id": 963,
                "name": "ParameterList",
                "src": "635:16:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 993,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 966,
                        "name": "ElementaryTypeName",
                        "src": "680:7:4"
                      }
                    ],
                    "id": 967,
                    "name": "VariableDeclaration",
                    "src": "680:7:4"
                  }
                ],
                "id": 968,
                "name": "ParameterList",
                "src": "679:9:4"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1755,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 964,
                    "name": "Identifier",
                    "src": "661:9:4"
                  }
                ],
                "id": 965,
                "name": "ModifierInvocation",
                "src": "661:9:4"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_931e9a96823c341c5bd12de9f03918a69879d03c2a585f63033a7e064b342639",
                                  "typeString": "literal_string \"Limit gen0 reached\""
                                }
                              ],
                              "overloadedDeclarations": [
                                2027,
                                2028
                              ],
                              "referencedDeclaration": 2028,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 969,
                            "name": "Identifier",
                            "src": "699:7:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "<",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 960,
                                  "type": "uint256",
                                  "value": "gen0Count"
                                },
                                "id": 970,
                                "name": "Identifier",
                                "src": "707:9:4"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 958,
                                  "type": "uint256",
                                  "value": "CREATION_LIMIT_GEN0"
                                },
                                "id": 971,
                                "name": "Identifier",
                                "src": "719:19:4"
                              }
                            ],
                            "id": 972,
                            "name": "BinaryOperation",
                            "src": "707:31:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "4c696d69742067656e302072656163686564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Limit gen0 reached\"",
                              "value": "Limit gen0 reached"
                            },
                            "id": 973,
                            "name": "Literal",
                            "src": "740:20:4"
                          }
                        ],
                        "id": 974,
                        "name": "FunctionCall",
                        "src": "699:62:4"
                      }
                    ],
                    "id": 975,
                    "name": "ExpressionStatement",
                    "src": "699:62:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 960,
                              "type": "uint256",
                              "value": "gen0Count"
                            },
                            "id": 976,
                            "name": "Identifier",
                            "src": "772:9:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "add",
                                  "referencedDeclaration": 1849,
                                  "type": "function (uint256,uint256) pure returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 960,
                                      "type": "uint256",
                                      "value": "gen0Count"
                                    },
                                    "id": 977,
                                    "name": "Identifier",
                                    "src": "784:9:4"
                                  }
                                ],
                                "id": 978,
                                "name": "MemberAccess",
                                "src": "784:13:4"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "31",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 1",
                                  "value": "1"
                                },
                                "id": 979,
                                "name": "Literal",
                                "src": "798:1:4"
                              }
                            ],
                            "id": 980,
                            "name": "FunctionCall",
                            "src": "784:16:4"
                          }
                        ],
                        "id": 981,
                        "name": "Assignment",
                        "src": "772:28:4"
                      }
                    ],
                    "id": 982,
                    "name": "ExpressionStatement",
                    "src": "772:28:4"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 968
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 573,
                              "type": "function (uint256,uint256,uint256,uint256,address) returns (uint256)",
                              "value": "_createTiger"
                            },
                            "id": 983,
                            "name": "Identifier",
                            "src": "818:12:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 984,
                            "name": "Literal",
                            "src": "831:1:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 985,
                            "name": "Literal",
                            "src": "834:1:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 986,
                            "name": "Literal",
                            "src": "837:1:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 962,
                              "type": "uint256",
                              "value": "_genes"
                            },
                            "id": 987,
                            "name": "Identifier",
                            "src": "840:6:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2024,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 988,
                                "name": "Identifier",
                                "src": "848:3:4"
                              }
                            ],
                            "id": 989,
                            "name": "MemberAccess",
                            "src": "848:10:4"
                          }
                        ],
                        "id": 990,
                        "name": "FunctionCall",
                        "src": "818:41:4"
                      }
                    ],
                    "id": 991,
                    "name": "Return",
                    "src": "811:48:4"
                  }
                ],
                "id": 992,
                "name": "Block",
                "src": "689:177:4"
              }
            ],
            "id": 993,
            "name": "FunctionDefinition",
            "src": "611:255:4"
          }
        ],
        "id": 994,
        "name": "ContractDefinition",
        "src": "154:714:4"
      }
    ],
    "id": 995,
    "name": "SourceUnit",
    "src": "0:869:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-12-26T07:25:39.352Z",
  "devdoc": {
    "author": "Andrew Ayson",
    "methods": {
      "approve(address,uint256)": {
        "details": "[ERC721] The zero address indicates there is no approved address Requires - msg.sender is owner or approved opperator - cannot approve owner",
        "params": {
          "_tigerId": "The tiger id that is approved for",
          "_to": "The address."
        }
      },
      "balanceOf(address)": {
        "details": "[ERC721] Tigers assigned to the zero address are considered invalid, and this function throws for queries about the zero address",
        "params": {
          "_owner": "The address to check"
        },
        "return": "The address of the owner of the tiger"
      },
      "breed(uint256,uint256)": {
        "params": {
          "_dadId": "the id of the dad",
          "_momId": "the id of the mom"
        }
      },
      "createGen0Tiger(uint256)": {
        "details": "Can only be called by owner and when limit has not be reached",
        "return": "The id of the created tiger"
      },
      "getApproved(uint256)": {
        "details": "[ERC721] Get the approval address of the tiger Requires - _tigerId must exist",
        "params": {
          "_tigerId": "The tiger id"
        },
        "return": "The approved address for this tiger, or the zero address if there is none"
      },
      "getChildren(uint256)": {
        "params": {
          "_tigerId": "the id of the mom"
        },
        "return": "array of ids of the children"
      },
      "isApprovedForAll(address,address)": {
        "details": "[ERC721]",
        "params": {
          "_operator": "The operator",
          "_owner": "The owner"
        },
        "return": "True if `_operator` is an approved operator for `_owner`, false otherwise"
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "[ERC721] Tigers assigned to the zero address are considered invalid, and this function throws for queries about the zero address",
        "return": "the address of the onwer of _tigerId"
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "[ERC721] Transfer implementation with a check on caller if it can accept ERC721 Requires - valid token - valid, non-zero _to address (via _transfer) - not to this address to prevent potential misuse (via _transfer) - msg.sender to be the owner, approved, or operator - when the caller is a smart contract, it should accept ERC721 tokens",
        "params": {
          "_from": "current owner of the tiger",
          "_tigerId": "uint256 id of the tiger to be transferred",
          "_to": "address to receive the ownership of the given tiger id"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "[ERC721] This works identically to the other function with an extra data parameter except this function just sets data to \"\"",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "_from": "current owner of the tiger",
          "_tigerId": "The id of the tiger to be transferred",
          "_to": "address to receive the ownership of the given tiger id"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "[ERC721] Emits the ApprovalForAll event. Requires - cannot approve self",
        "params": {
          "_approved": "The approval status",
          "_operator": "The tiger id"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "Interface identification is specified in ERC-165. This function uses less than 30,000 gas.",
        "params": {
          "_interfaceId": "The interface identifier, as specified in ERC-165"
        },
        "return": "true if the contract implements _interfaceId and _interfaceId is not 0xffffffff, false otherwise"
      },
      "tokenByIndex(uint256)": {
        "details": "[ERC721Enumerable] Requires: - _index < totalSupply()",
        "params": {
          "_index": "A counter less than `totalSupply()`"
        },
        "return": "_index which is the same as the identifier"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.Be aware when calling this contract as its quite expensive because it loops through all tigers. Could potentially be optimized if we save all tigers also in an mapping of owners.",
        "params": {
          "_index": "uint256 representing the index to be accessed of the requested tokens list",
          "_owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokensOfOwner(address)": {
        "details": "[ERC721Enumerable] Requires - _index < balanceOf(_owner) - _owner is  non-zero addressBe aware when calling this contract as its quite expensive because it loops through all tigers",
        "params": {
          "_owner": "An address where we are interested in tigers owned by them"
        },
        "return": "The token identifier for the `_index`th tiger assigned to `_owner`,  (sort order not specified)"
      },
      "totalSupply()": {
        "details": "[ERC721Enumerable]",
        "return": "A count of valid tigers tracked by this contract, where each one of them has an assigned and queryable owner not equal to the zero address"
      },
      "transfer(address,uint256)": {
        "params": {
          "_tigerId": "id of the tiger to be transferred",
          "_to": "address to receive the ownership of the given tiger id"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "[ERC721] Transfers the ownership of a given token id to another address Requires - valid token - valid, non-zero _to address (via _transfer) - not to this address to prevent potential misuse (via _transfer) - msg.sender to be the owner, approved, or operator",
        "params": {
          "_from": "current owner of the tiger",
          "_tigerId": "id of the tiger to be transferred",
          "_to": "address to receive the ownership of the given tiger id"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "The TigerMinting contract responsible to create tigers."
  },
  "userdoc": {
    "methods": {
      "approve(address,uint256)": {
        "notice": "Change or reaffirm the approved address for an tiger"
      },
      "balanceOf(address)": {
        "notice": "Count all Tigers assigned to an owner"
      },
      "breed(uint256,uint256)": {
        "notice": "Breed a new tiger based on a mom and dad"
      },
      "createGen0Tiger(uint256)": {
        "notice": "Creates a new gen0 tiger"
      },
      "getApproved(uint256)": {
        "notice": "Get the approved address for a single tiger"
      },
      "getChildren(uint256)": {
        "notice": "Get all the children of a tigerId"
      },
      "isApprovedForAll(address,address)": {
        "notice": "Query if an address is an authorized operator for another address"
      },
      "ownerOf(uint256)": {
        "notice": "Find the owner of an Tiger"
      },
      "safeTransferFrom(address,address,uint256)": {
        "notice": "Transfers the ownership of an Tiger from one address to another address"
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "notice": "Transfers the ownership of an Tiger from one address to another address"
      },
      "setApprovalForAll(address,bool)": {
        "notice": "Enable or disable approval for a third party (\"operator\") to manage all of `msg.sender`'s assets"
      },
      "supportsInterface(bytes4)": {
        "notice": "Query if a contract implements an interface"
      },
      "tokenByIndex(uint256)": {
        "notice": "Enumerate valid tigers"
      },
      "tokensOfOwner(address)": {
        "notice": "Returns a list of all Tiger IDs assigned to an address."
      },
      "totalSupply()": {
        "notice": "Count tigers tracked by this contract"
      },
      "transfer(address,uint256)": {
        "notice": "Transfers the ownership of an own Tiger to another address"
      },
      "transferFrom(address,address,uint256)": {
        "notice": "Transfer ownership of a Tiger -- THE CALLER IS RESPONSIBLE TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING TIGERS OR ELSE THEY MAY BE PERMANENTLY LOST"
      }
    }
  }
}