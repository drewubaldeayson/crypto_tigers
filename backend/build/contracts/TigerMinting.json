{
  "contractName": "TigerMinting",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tigerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "momId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "dadId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "genes",
          "type": "uint256"
        }
      ],
      "name": "Birth",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "CREATION_LIMIT_GEN0",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tigerId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_momId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_dadId",
          "type": "uint256"
        }
      ],
      "name": "breed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "gen0Count",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tigerId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tigerId",
          "type": "uint256"
        }
      ],
      "name": "getChildren",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tigerId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tigerId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tigerId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "tokensOfOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tigerId",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tigerId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_genes",
          "type": "uint256"
        }
      ],
      "name": "createGen0Tiger",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tigerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"momId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dadId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"genes\",\"type\":\"uint256\"}],\"name\":\"Birth\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"CREATION_LIMIT_GEN0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tigerId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_momId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_dadId\",\"type\":\"uint256\"}],\"name\":\"breed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_genes\",\"type\":\"uint256\"}],\"name\":\"createGen0Tiger\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"gen0Count\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tigerId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tigerId\",\"type\":\"uint256\"}],\"name\":\"getChildren\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tigerId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tigerId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tigerId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tigerId\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tigerId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Andrew Ayson\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"[ERC721] The zero address indicates there is no approved address Requires - msg.sender is owner or approved opperator - cannot approve owner\",\"params\":{\"_tigerId\":\"The tiger id that is approved for\",\"_to\":\"The address.\"}},\"balanceOf(address)\":{\"details\":\"[ERC721] Tigers assigned to the zero address are considered invalid, and this function throws for queries about the zero address\",\"params\":{\"_owner\":\"The address to check\"},\"return\":\"The address of the owner of the tiger\"},\"breed(uint256,uint256)\":{\"params\":{\"_dadId\":\"the id of the dad\",\"_momId\":\"the id of the mom\"}},\"createGen0Tiger(uint256)\":{\"details\":\"Can only be called by owner and when limit has not be reached\",\"return\":\"The id of the created tiger\"},\"getApproved(uint256)\":{\"details\":\"[ERC721] Get the approval address of the tiger Requires - _tigerId must exist\",\"params\":{\"_tigerId\":\"The tiger id\"},\"return\":\"The approved address for this tiger, or the zero address if there is none\"},\"getChildren(uint256)\":{\"params\":{\"_tigerId\":\"the id of the mom\"},\"return\":\"array of ids of the children\"},\"isApprovedForAll(address,address)\":{\"details\":\"[ERC721]\",\"params\":{\"_operator\":\"The operator\",\"_owner\":\"The owner\"},\"return\":\"True if `_operator` is an approved operator for `_owner`, false otherwise\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"[ERC721] Tigers assigned to the zero address are considered invalid, and this function throws for queries about the zero address\",\"return\":\"the address of the onwer of _tigerId\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"[ERC721] Transfer implementation with a check on caller if it can accept ERC721 Requires - valid token - valid, non-zero _to address (via _transfer) - not to this address to prevent potential misuse (via _transfer) - msg.sender to be the owner, approved, or operator - when the caller is a smart contract, it should accept ERC721 tokens\",\"params\":{\"_from\":\"current owner of the tiger\",\"_tigerId\":\"uint256 id of the tiger to be transferred\",\"_to\":\"address to receive the ownership of the given tiger id\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"[ERC721] This works identically to the other function with an extra data parameter except this function just sets data to \\\"\\\"\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"_from\":\"current owner of the tiger\",\"_tigerId\":\"The id of the tiger to be transferred\",\"_to\":\"address to receive the ownership of the given tiger id\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"[ERC721] Emits the ApprovalForAll event. Requires - cannot approve self\",\"params\":{\"_approved\":\"The approval status\",\"_operator\":\"The tiger id\"}},\"supportsInterface(bytes4)\":{\"details\":\"Interface identification is specified in ERC-165. This function uses less than 30,000 gas.\",\"params\":{\"_interfaceId\":\"The interface identifier, as specified in ERC-165\"},\"return\":\"true if the contract implements _interfaceId and _interfaceId is not 0xffffffff, false otherwise\"},\"tokenByIndex(uint256)\":{\"details\":\"[ERC721Enumerable] Requires: - _index < totalSupply()\",\"params\":{\"_index\":\"A counter less than `totalSupply()`\"},\"return\":\"_index which is the same as the identifier\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.Be aware when calling this contract as its quite expensive because it loops through all tigers. Could potentially be optimized if we save all tigers also in an mapping of owners.\",\"params\":{\"_index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"_owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokensOfOwner(address)\":{\"details\":\"[ERC721Enumerable] Requires - _index < balanceOf(_owner) - _owner is  non-zero addressBe aware when calling this contract as its quite expensive because it loops through all tigers\",\"params\":{\"_owner\":\"An address where we are interested in tigers owned by them\"},\"return\":\"The token identifier for the `_index`th tiger assigned to `_owner`,  (sort order not specified)\"},\"totalSupply()\":{\"details\":\"[ERC721Enumerable]\",\"return\":\"A count of valid tigers tracked by this contract, where each one of them has an assigned and queryable owner not equal to the zero address\"},\"transfer(address,uint256)\":{\"params\":{\"_tigerId\":\"id of the tiger to be transferred\",\"_to\":\"address to receive the ownership of the given tiger id\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"[ERC721] Transfers the ownership of a given token id to another address Requires - valid token - valid, non-zero _to address (via _transfer) - not to this address to prevent potential misuse (via _transfer) - msg.sender to be the owner, approved, or operator\",\"params\":{\"_from\":\"current owner of the tiger\",\"_tigerId\":\"id of the tiger to be transferred\",\"_to\":\"address to receive the ownership of the given tiger id\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"The TigerMinting contract responsible to create tigers.\"},\"userdoc\":{\"methods\":{\"approve(address,uint256)\":{\"notice\":\"Change or reaffirm the approved address for an tiger\"},\"balanceOf(address)\":{\"notice\":\"Count all Tigers assigned to an owner\"},\"breed(uint256,uint256)\":{\"notice\":\"Breed a new tiger based on a mom and dad\"},\"createGen0Tiger(uint256)\":{\"notice\":\"Creates a new gen0 tiger\"},\"getApproved(uint256)\":{\"notice\":\"Get the approved address for a single tiger\"},\"getChildren(uint256)\":{\"notice\":\"Get all the children of a tigerId\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Query if an address is an authorized operator for another address\"},\"ownerOf(uint256)\":{\"notice\":\"Find the owner of an Tiger\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"Transfers the ownership of an Tiger from one address to another address\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Transfers the ownership of an Tiger from one address to another address\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Enable or disable approval for a third party (\\\"operator\\\") to manage all of `msg.sender`'s assets\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"},\"tokenByIndex(uint256)\":{\"notice\":\"Enumerate valid tigers\"},\"tokensOfOwner(address)\":{\"notice\":\"Returns a list of all Tiger IDs assigned to an address.\"},\"totalSupply()\":{\"notice\":\"Count tigers tracked by this contract\"},\"transfer(address,uint256)\":{\"notice\":\"Transfers the ownership of an own Tiger to another address\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer ownership of a Tiger -- THE CALLER IS RESPONSIBLE TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING TIGERS OR ELSE THEY MAY BE PERMANENTLY LOST\"}}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/TigerMinting.sol\":\"TigerMinting\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/TigerBase.sol\":{\"keccak256\":\"0xfa3b84fca6a900039aa215351c02f1559e84926abe5e1bc645e52b2de27577ef\",\"urls\":[\"bzz-raw://1b4090a6672981d27b96f56068651e9fa08b12a95901bbf0b73b62b62dc7d003\",\"dweb:/ipfs/QmUWEgw5c82EwZwuQLT2jndo8ZwXuCzjmvePRa1DzWPikM\"]},\"project:/contracts/TigerBreeding.sol\":{\"keccak256\":\"0x12f2fb79659b81a345585a02ab966743d580b554482e1f15e9779d4b0c201b92\",\"urls\":[\"bzz-raw://2d6f9bb5f68ccdb629cdcc603676ae2c9078f7ea3741b7f74d5feeb630124fb3\",\"dweb:/ipfs/QmNd6VsBk6cCTep1F3yuzQ5tLpZE6rMa4JysypxJHyzuVo\"]},\"project:/contracts/TigerMinting.sol\":{\"keccak256\":\"0x0d9369f4acf5498e196c3da1c440f7367fd1e9ee458907e586c609e8298d6948\",\"urls\":[\"bzz-raw://fd8024262f0ec9c35fe6f0909d11a11520de7eaae06ab6c960289086790abddd\",\"dweb:/ipfs/QmbcQUgXdYRnm8ogNfeN8EjvUi2ziB6sQM74bDizN516qX\"]},\"project:/contracts/TigerOwnership.sol\":{\"keccak256\":\"0x954e32f3e454d532459b3427d808ac457e63bf778ee9b902145a7db32c1fee24\",\"urls\":[\"bzz-raw://f8106edc5456c9e2fdb3b75d937c4ad9cc04c1897644c83f515f9a32b0d2f3b4\",\"dweb:/ipfs/QmZvWrzhwvUozLQQqbW8gqhdepdFfR8U3nMvtu1HJMgiBv\"]},\"project:/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xe54f31fd26ed6ceca6e11d8779557e56811d3dde2aa1b8e52a48a2fbfeca7187\",\"urls\":[\"bzz-raw://8fa1c142bf78179d084f8d3a4f2dfe396ae489af77acf14a7db6faa97561f32b\",\"dweb:/ipfs/QmPFNcASpUxkBFQ7xTdkA44DNqZihmcf3QiRf7hXm9Zupr\"]},\"project:/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0x4e9fe8e4e3c9cc5092ccdaee7a68117b817f89281540b91585d1f03a3c45bb7e\",\"urls\":[\"bzz-raw://e00d8b20a4fb8ba1d9585883a2b7470bf56b8eb5e0c857379710ba6c258f6258\",\"dweb:/ipfs/QmeUjuzy59Fgk3162quG1nG4tjF2HzcwiC1n6kaLhYJbgW\"]},\"project:/contracts/interfaces/IERC721Receiver.sol\":{\"keccak256\":\"0x0511fb3c896ea76306615158bd130dbba5ba84b0c5ada0486fa2cd2a6ac7328c\",\"urls\":[\"bzz-raw://8b714c253e97fed026b5c1ec728b3f47156bfd91c2f048f968aa91c652ee8f34\",\"dweb:/ipfs/QmUXspdxvcdghKNX4UccnDti4CNP8iW1ZerkLYdfmBemDn\"]},\"project:/contracts/utils/Ownable.sol\":{\"keccak256\":\"0xcf906bc89e8cfe6765436883803f03908a874e24e39ac6f4d5da68e329e14ae6\",\"urls\":[\"bzz-raw://52cdc51f410e4727e1346c0604568a2aee7bfa79b51ff81aa4f80d9f75a2dd5a\",\"dweb:/ipfs/QmXSf9xvKZzdY5oQ9HLb1MARJoPcwAtef21w27ot95FCEF\"]},\"project:/contracts/utils/SafeMath.sol\":{\"keccak256\":\"0x703948e825762bb55bbff9168837febaabca2d200abf8ee76f194e8b3f045a49\",\"urls\":[\"bzz-raw://f5d43d79bfc0c7ce1c56060f60b450bd69b957bf46c5822f968c292d2b1d9994\",\"dweb:/ipfs/Qmc48jQK4mxQVHAt7ia2fmquiFArUnoYBgPpbEKc7XUqFy\"]}},\"version\":1}",
  "bytecode": "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3612d25806100ae6000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c8063810c9236116100de578063a9059cbb11610097578063b88d4fde11610071578063b88d4fde146108cc578063d9ecad7b146109d1578063e985e9c514610a1d578063f2fde38b14610a995761018e565b8063a9059cbb14610842578063b30387a414610890578063b4834330146108ae5761018e565b8063810c9236146106285780638462151c1461066a5780638da5cb5b146107035780638f32d59b1461074d57806395d89b411461076f578063a22cb465146107f25761018e565b80632f745c591161014b5780634f6ccce7116101255780634f6ccce7146105165780636352211e1461055857806370a08231146105c6578063715018a61461061e5761018e565b80632f745c59146103c357806342842e0e1461042557806349ae8dc3146104935761018e565b806301ffc9a71461019357806306fdde03146101f8578063081812fc1461027b578063095ea7b3146102e957806318160ddd1461033757806323b872dd14610355575b600080fd5b6101de600480360360208110156101a957600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610add565b604051808215151515815260200191505060405180910390f35b610200610b7d565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610240578082015181840152602081019050610225565b50505050905090810190601f16801561026d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102a76004803603602081101561029157600080fd5b8101908080359060200190929190505050610bb6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610335600480360360408110156102ff57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c51565b005b61033f610e11565b6040518082815260200191505060405180910390f35b6103c16004803603606081101561036b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e1e565b005b61040f600480360360408110156103d957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f25565b6040518082815260200191505060405180910390f35b6104916004803603606081101561043b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fc8565b005b6104bf600480360360208110156104a957600080fd5b8101908080359060200190929190505050610fe8565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156105025780820151818401526020810190506104e7565b505050509050019250505060405180910390f35b6105426004803603602081101561052c57600080fd5b8101908080359060200190929190505050611058565b6040518082815260200191505060405180910390f35b6105846004803603602081101561056e57600080fd5b81019080803590602001909291905050506110de565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610608600480360360208110156105dc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111a6565b6040518082815260200191505060405180910390f35b610626611274565b005b6106546004803603602081101561063e57600080fd5b81019080803590602001909291905050506113ad565b6040518082815260200191505060405180910390f35b6106ac6004803603602081101561068057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114d4565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156106ef5780820151818401526020810190506106d4565b505050509050019250505060405180910390f35b61070b6116be565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6107556116e7565b604051808215151515815260200191505060405180910390f35b61077761173e565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107b757808201518184015260208101905061079c565b50505050905090810190601f1680156107e45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6108406004803603604081101561080857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611777565b005b61088e6004803603604081101561085857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061191a565b005b610898611929565b6040518082815260200191505060405180910390f35b6108b661192f565b6040518082815260200191505060405180910390f35b6109cf600480360360808110156108e257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561094957600080fd5b82018360208201111561095b57600080fd5b8035906020019184600183028401116401000000008311171561097d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611935565b005b610a07600480360360408110156109e757600080fd5b810190808035906020019092919080359060200190929190505050611a3e565b6040518082815260200191505060405180910390f35b610a7f60048036036040811015610a3357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ce8565b604051808215151515815260200191505060405180910390f35b610adb60048036036020811015610aaf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d7c565b005b60006380ac58cd60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610b7657506301ffc9a760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6040518060400160405280600c81526020017f43727970746f546967657273000000000000000000000000000000000000000081525081565b6000610bc182611e02565b610c16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612c696024913960400191505060405180910390fd5b6003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610c5c826110de565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d00576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f617070726f76616c20746f2063757272656e74206f776e65720000000000000081525060200191505060405180910390fd5b610d0a3383611e74565b610d5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180612c136030913960400191505060405180910390fd5b826003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000600180549050905090565b610e2781611e02565b610e99576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f6e6578697374656e7420746f6b656e00000000000000000000000000000081525060200191505060405180910390fd5b610ea33382611eb5565b610f15576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f6e6f7420617574686f72697a656400000000000000000000000000000000000081525060200191505060405180910390fd5b610f20838383611f4a565b505050565b6000610f30836111a6565b8210610fa4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f696e646578206f7574206f6620626f756e64730000000000000000000000000081525060200191505060405180910390fd5b610fad836114d4565b8281518110610fb857fe5b6020026020010151905092915050565b610fe383838360405180602001604052806000815250611935565b505050565b6060806005600084815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561104857602002820191906000526020600020905b815481526020019060010190808311611034575b5050505050905080915050919050565b6000611062610e11565b82106110d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f696e646578206f7574206f6620626f756e64730000000000000000000000000081525060200191505060405180910390fd5b819050919050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561119d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612cd06021913960400191505060405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561122d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612cae6022913960400191505060405180910390fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61127c6116e7565b6112ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60006113b76116e7565b611429576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6103e8600754106114a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4c696d69742067656e302072656163686564000000000000000000000000000081525060200191505060405180910390fd5b6114b8600160075461226f90919063ffffffff16565b6007819055506114cd600080600085336122f7565b9050919050565b6060600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611579576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f546f6b656e20717565727920666f7220746865207a65726f206164647265737381525060200191505060405180910390fd5b6000611584836111a6565b905060008114156115c85760006040519080825280602002602001820160405280156115bf5781602001602082028038833980820191505090505b509150506116b9565b6060816040519080825280602002602001820160405280156115f95781602001602082028038833980820191505090505b5090506000611606610e11565b9050600080905060008090505b8281116116b0578673ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156116a3578084838151811061168e57fe5b60200260200101818152505081806001019250505b8080600101915050611613565b83955050505050505b919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6040518060400160405280600581526020017f544947455200000000000000000000000000000000000000000000000000000081525081565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611819576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f617070726f76616c20746f2063616c6c6572000000000000000000000000000081525060200191505060405180910390fd5b80600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b611925338383610fc8565b5050565b60075481565b6103e881565b61193e82611e02565b6119b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f6e6578697374656e7420746f6b656e00000000000000000000000000000081525060200191505060405180910390fd5b6119ba3383611eb5565b611a2c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f6e6f7420617574686f72697a656400000000000000000000000000000000000081525060200191505060405180910390fd5b611a38848484846124d1565b50505050565b6000611a4a3384611e74565b611abc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4e6f74206f776e2074696765720000000000000000000000000000000000000081525060200191505060405180910390fd5b611ac63383611e74565b611b38576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4e6f74206f776e2074696765720000000000000000000000000000000000000081525060200191505060405180910390fd5b81831415611bae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4c65742773206e6f7420646f207468697300000000000000000000000000000081525060200191505060405180910390fd5b600060018481548110611bbd57fe5b90600052602060002090600202019050600060018481548110611bdc57fe5b906000526020600020906002020190506000611c0083600001548360000154612560565b90506000611c4d6001611c3f8660010160109054906101000a900461ffff1661ffff168660010160109054906101000a900461ffff1661ffff166126c0565b61226f90919063ffffffff16565b90506000611c5e88888486336122f7565b90506005600088815260200190815260200160002081908060018154018082558091505090600182039060005260206000200160009091929091909150555060056000898152602001908152602001600020819080600181540180825580915050906001820390600052602060002001600090919290919091505550809550505050505092915050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b611d846116e7565b611df6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b611dff816126da565b50565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b60008273ffffffffffffffffffffffffffffffffffffffff16611e96836110de565b73ffffffffffffffffffffffffffffffffffffffff1614905092915050565b600080611ec1836110de565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611f3057508373ffffffffffffffffffffffffffffffffffffffff16611f1884610bb6565b73ffffffffffffffffffffffffffffffffffffffff16145b80611f415750611f408185611ce8565b5b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611fed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f7472616e7366657220746f20746865207a65726f20616464726573730000000081525060200191505060405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561202657600080fd5b6120796001600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461226f90919063ffffffff16565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461220f576121956001600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461281e90919063ffffffff16565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506003600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000808284019050838110156122ed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000612301612ba6565b6040518060a001604052808581526020014267ffffffffffffffff1681526020018863ffffffff1681526020018763ffffffff1681526020018661ffff168152509050600061243260018084908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060408201518160010160086101000a81548163ffffffff021916908363ffffffff160217905550606082015181600101600c6101000a81548163ffffffff021916908363ffffffff16021790555060808201518160010160106101000a81548161ffff021916908361ffff160217905550505061281e90919063ffffffff16565b90507f0a5311bd2a6608f08a180df2ee7c5946819a649b204b554bb8e39825b2c50ad584828a8a89604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020018381526020018281526020019550505050505060405180910390a16124c360008583611f4a565b809250505095945050505050565b6124dc848484611f4a565b6124e884848484612868565b61255a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f7472616e7366657220746f206e6f6e204552433732315265636569766572000081525060200191505060405180910390fd5b50505050565b600061256a612bef565b6000612574612a3b565b90506000600790506000600190505b60808111612615576000818460ff1616146125c357606487816125a257fe5b0660ff16848360ff16600881106125b557fe5b6020020181815250506125ea565b606486816125cd57fe5b0660ff16848360ff16600881106125e057fe5b6020020181815250505b606487816125f457fe5b0496506064868161260157fe5b049550600182039150600281029050612583565b50600060078360ff168161262557fe5b06905060638360ff168161263557fe5b0660ff16848260ff166008811061264857fe5b602002018181525050600080600090505b60088110156126b15761268586826008811061267157fe5b60200201518361226f90919063ffffffff16565b9150600781146126a6576126a3606483612a4d90919063ffffffff16565b91505b600181019050612659565b50809550505050505092915050565b6000818310156126d057816126d2565b825b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612760576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612c436026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600061286083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612ad3565b905092915050565b600061287384612b93565b6128805760019050612a33565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561295b578082015181840152602081019050612940565b50505050905090810190601f1680156129885780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b1580156129aa57600080fd5b505af11580156129be573d6000803e3d6000fd5b505050506040513d60208110156129d457600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b600060ff4281612a4757fe5b06905090565b600080831415612a605760009050612acd565b6000828402905082848281612a7157fe5b0414612ac8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612c8d6021913960400191505060405180910390fd5b809150505b92915050565b6000838311158290612b80576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612b45578082015181840152602081019050612b2a565b50505050905090810190601f168015612b725780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080823b905060008111915050919050565b6040518060a0016040528060008152602001600067ffffffffffffffff168152602001600063ffffffff168152602001600063ffffffff168152602001600061ffff1681525090565b60405180610100016040528060089060208202803883398082019150509050509056fe617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373617070726f76656420717565727920666f72206e6f6e6578697374656e74207469676572536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7742616c616e636520717565727920666f7220746865207a65726f20616464726573734f776e657220717565727920666f72206e6f6e6578697374656e74207469676572a265627a7a72315820c0bce49ba61c137dfffad4547fda30175a33fc7835395bc4a10d28d4dc07643d64736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061018e5760003560e01c8063810c9236116100de578063a9059cbb11610097578063b88d4fde11610071578063b88d4fde146108cc578063d9ecad7b146109d1578063e985e9c514610a1d578063f2fde38b14610a995761018e565b8063a9059cbb14610842578063b30387a414610890578063b4834330146108ae5761018e565b8063810c9236146106285780638462151c1461066a5780638da5cb5b146107035780638f32d59b1461074d57806395d89b411461076f578063a22cb465146107f25761018e565b80632f745c591161014b5780634f6ccce7116101255780634f6ccce7146105165780636352211e1461055857806370a08231146105c6578063715018a61461061e5761018e565b80632f745c59146103c357806342842e0e1461042557806349ae8dc3146104935761018e565b806301ffc9a71461019357806306fdde03146101f8578063081812fc1461027b578063095ea7b3146102e957806318160ddd1461033757806323b872dd14610355575b600080fd5b6101de600480360360208110156101a957600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610add565b604051808215151515815260200191505060405180910390f35b610200610b7d565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610240578082015181840152602081019050610225565b50505050905090810190601f16801561026d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102a76004803603602081101561029157600080fd5b8101908080359060200190929190505050610bb6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610335600480360360408110156102ff57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c51565b005b61033f610e11565b6040518082815260200191505060405180910390f35b6103c16004803603606081101561036b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e1e565b005b61040f600480360360408110156103d957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f25565b6040518082815260200191505060405180910390f35b6104916004803603606081101561043b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fc8565b005b6104bf600480360360208110156104a957600080fd5b8101908080359060200190929190505050610fe8565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156105025780820151818401526020810190506104e7565b505050509050019250505060405180910390f35b6105426004803603602081101561052c57600080fd5b8101908080359060200190929190505050611058565b6040518082815260200191505060405180910390f35b6105846004803603602081101561056e57600080fd5b81019080803590602001909291905050506110de565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610608600480360360208110156105dc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111a6565b6040518082815260200191505060405180910390f35b610626611274565b005b6106546004803603602081101561063e57600080fd5b81019080803590602001909291905050506113ad565b6040518082815260200191505060405180910390f35b6106ac6004803603602081101561068057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114d4565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156106ef5780820151818401526020810190506106d4565b505050509050019250505060405180910390f35b61070b6116be565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6107556116e7565b604051808215151515815260200191505060405180910390f35b61077761173e565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107b757808201518184015260208101905061079c565b50505050905090810190601f1680156107e45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6108406004803603604081101561080857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611777565b005b61088e6004803603604081101561085857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061191a565b005b610898611929565b6040518082815260200191505060405180910390f35b6108b661192f565b6040518082815260200191505060405180910390f35b6109cf600480360360808110156108e257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561094957600080fd5b82018360208201111561095b57600080fd5b8035906020019184600183028401116401000000008311171561097d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611935565b005b610a07600480360360408110156109e757600080fd5b810190808035906020019092919080359060200190929190505050611a3e565b6040518082815260200191505060405180910390f35b610a7f60048036036040811015610a3357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ce8565b604051808215151515815260200191505060405180910390f35b610adb60048036036020811015610aaf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d7c565b005b60006380ac58cd60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610b7657506301ffc9a760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6040518060400160405280600c81526020017f43727970746f546967657273000000000000000000000000000000000000000081525081565b6000610bc182611e02565b610c16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612c696024913960400191505060405180910390fd5b6003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610c5c826110de565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d00576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f617070726f76616c20746f2063757272656e74206f776e65720000000000000081525060200191505060405180910390fd5b610d0a3383611e74565b610d5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180612c136030913960400191505060405180910390fd5b826003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000600180549050905090565b610e2781611e02565b610e99576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f6e6578697374656e7420746f6b656e00000000000000000000000000000081525060200191505060405180910390fd5b610ea33382611eb5565b610f15576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f6e6f7420617574686f72697a656400000000000000000000000000000000000081525060200191505060405180910390fd5b610f20838383611f4a565b505050565b6000610f30836111a6565b8210610fa4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f696e646578206f7574206f6620626f756e64730000000000000000000000000081525060200191505060405180910390fd5b610fad836114d4565b8281518110610fb857fe5b6020026020010151905092915050565b610fe383838360405180602001604052806000815250611935565b505050565b6060806005600084815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561104857602002820191906000526020600020905b815481526020019060010190808311611034575b5050505050905080915050919050565b6000611062610e11565b82106110d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f696e646578206f7574206f6620626f756e64730000000000000000000000000081525060200191505060405180910390fd5b819050919050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561119d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612cd06021913960400191505060405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561122d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612cae6022913960400191505060405180910390fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61127c6116e7565b6112ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60006113b76116e7565b611429576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6103e8600754106114a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4c696d69742067656e302072656163686564000000000000000000000000000081525060200191505060405180910390fd5b6114b8600160075461226f90919063ffffffff16565b6007819055506114cd600080600085336122f7565b9050919050565b6060600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611579576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f546f6b656e20717565727920666f7220746865207a65726f206164647265737381525060200191505060405180910390fd5b6000611584836111a6565b905060008114156115c85760006040519080825280602002602001820160405280156115bf5781602001602082028038833980820191505090505b509150506116b9565b6060816040519080825280602002602001820160405280156115f95781602001602082028038833980820191505090505b5090506000611606610e11565b9050600080905060008090505b8281116116b0578673ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156116a3578084838151811061168e57fe5b60200260200101818152505081806001019250505b8080600101915050611613565b83955050505050505b919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6040518060400160405280600581526020017f544947455200000000000000000000000000000000000000000000000000000081525081565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611819576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f617070726f76616c20746f2063616c6c6572000000000000000000000000000081525060200191505060405180910390fd5b80600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b611925338383610fc8565b5050565b60075481565b6103e881565b61193e82611e02565b6119b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f6e6578697374656e7420746f6b656e00000000000000000000000000000081525060200191505060405180910390fd5b6119ba3383611eb5565b611a2c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f6e6f7420617574686f72697a656400000000000000000000000000000000000081525060200191505060405180910390fd5b611a38848484846124d1565b50505050565b6000611a4a3384611e74565b611abc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4e6f74206f776e2074696765720000000000000000000000000000000000000081525060200191505060405180910390fd5b611ac63383611e74565b611b38576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4e6f74206f776e2074696765720000000000000000000000000000000000000081525060200191505060405180910390fd5b81831415611bae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4c65742773206e6f7420646f207468697300000000000000000000000000000081525060200191505060405180910390fd5b600060018481548110611bbd57fe5b90600052602060002090600202019050600060018481548110611bdc57fe5b906000526020600020906002020190506000611c0083600001548360000154612560565b90506000611c4d6001611c3f8660010160109054906101000a900461ffff1661ffff168660010160109054906101000a900461ffff1661ffff166126c0565b61226f90919063ffffffff16565b90506000611c5e88888486336122f7565b90506005600088815260200190815260200160002081908060018154018082558091505090600182039060005260206000200160009091929091909150555060056000898152602001908152602001600020819080600181540180825580915050906001820390600052602060002001600090919290919091505550809550505050505092915050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b611d846116e7565b611df6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b611dff816126da565b50565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b60008273ffffffffffffffffffffffffffffffffffffffff16611e96836110de565b73ffffffffffffffffffffffffffffffffffffffff1614905092915050565b600080611ec1836110de565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611f3057508373ffffffffffffffffffffffffffffffffffffffff16611f1884610bb6565b73ffffffffffffffffffffffffffffffffffffffff16145b80611f415750611f408185611ce8565b5b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611fed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f7472616e7366657220746f20746865207a65726f20616464726573730000000081525060200191505060405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561202657600080fd5b6120796001600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461226f90919063ffffffff16565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461220f576121956001600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461281e90919063ffffffff16565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506003600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000808284019050838110156122ed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000612301612ba6565b6040518060a001604052808581526020014267ffffffffffffffff1681526020018863ffffffff1681526020018763ffffffff1681526020018661ffff168152509050600061243260018084908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060408201518160010160086101000a81548163ffffffff021916908363ffffffff160217905550606082015181600101600c6101000a81548163ffffffff021916908363ffffffff16021790555060808201518160010160106101000a81548161ffff021916908361ffff160217905550505061281e90919063ffffffff16565b90507f0a5311bd2a6608f08a180df2ee7c5946819a649b204b554bb8e39825b2c50ad584828a8a89604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020018381526020018281526020019550505050505060405180910390a16124c360008583611f4a565b809250505095945050505050565b6124dc848484611f4a565b6124e884848484612868565b61255a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f7472616e7366657220746f206e6f6e204552433732315265636569766572000081525060200191505060405180910390fd5b50505050565b600061256a612bef565b6000612574612a3b565b90506000600790506000600190505b60808111612615576000818460ff1616146125c357606487816125a257fe5b0660ff16848360ff16600881106125b557fe5b6020020181815250506125ea565b606486816125cd57fe5b0660ff16848360ff16600881106125e057fe5b6020020181815250505b606487816125f457fe5b0496506064868161260157fe5b049550600182039150600281029050612583565b50600060078360ff168161262557fe5b06905060638360ff168161263557fe5b0660ff16848260ff166008811061264857fe5b602002018181525050600080600090505b60088110156126b15761268586826008811061267157fe5b60200201518361226f90919063ffffffff16565b9150600781146126a6576126a3606483612a4d90919063ffffffff16565b91505b600181019050612659565b50809550505050505092915050565b6000818310156126d057816126d2565b825b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612760576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612c436026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600061286083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612ad3565b905092915050565b600061287384612b93565b6128805760019050612a33565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561295b578082015181840152602081019050612940565b50505050905090810190601f1680156129885780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b1580156129aa57600080fd5b505af11580156129be573d6000803e3d6000fd5b505050506040513d60208110156129d457600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b600060ff4281612a4757fe5b06905090565b600080831415612a605760009050612acd565b6000828402905082848281612a7157fe5b0414612ac8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612c8d6021913960400191505060405180910390fd5b809150505b92915050565b6000838311158290612b80576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612b45578082015181840152602081019050612b2a565b50505050905090810190601f168015612b725780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080823b905060008111915050919050565b6040518060a0016040528060008152602001600067ffffffffffffffff168152602001600063ffffffff168152602001600063ffffffff168152602001600061ffff1681525090565b60405180610100016040528060089060208202803883398082019150509050509056fe617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373617070726f76656420717565727920666f72206e6f6e6578697374656e74207469676572536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7742616c616e636520717565727920666f7220746865207a65726f20616464726573734f776e657220717565727920666f72206e6f6e6578697374656e74207469676572a265627a7a72315820c0bce49ba61c137dfffad4547fda30175a33fc7835395bc4a10d28d4dc07643d64736f6c63430005100032",
  "sourceMap": "154:714:5:-;;;667:10:10;658:6;;:19;;;;;;;;;;;;;;;;;;725:10;692:44;;721:1;692:44;;;;;;;;;;;;154:714:5;;;;;;",
  "deployedSourceMap": "154:714:5:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;154:714:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1290:219:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1290:219:6;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;356:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;356:44:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10994:198;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10994:198:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;9707:390;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9707:390:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;11918:91;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8728:283;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8728:283:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14301:240;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14301:240:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7043:168;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7043:168:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2613:167:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2613:167:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2613:167:3;;;;;;;;;;;;;;;;;12265:164:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12265:164:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2283:221;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2283:221:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1827:192;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1827:192:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1602:137:10;;;:::i;:::-;;611:255:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;611:255:5;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;12957:763:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12957:763:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12957:763:6;;;;;;;;;;;;;;;;;819:77:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1170:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;406:39:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;406:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10417:267;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10417:267:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9237:118;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9237:118:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;407:24:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;276:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7717:326:6;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7717:326:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7717:326:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7717:326:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7717:326:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7717:326:6;;;;;;;;;;;;;;;:::i;:::-;;1720:737:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1720:737:3;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;11473:177:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11473:177:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1888:107:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1888:107:10;;;;;;;;;;;;;;;;;;;:::i;:::-;;1290:219:6;1385:4;827:10;1429:20;;1413:36;;;:12;:36;;;;:88;;;;890:10;1481:20;;1465:36;;;:12;:36;;;;1413:88;1405:97;;1290:219;;;:::o;356:44::-;;;;;;;;;;;;;;;;;;;:::o;10994:198::-;11054:7;11081:17;11089:8;11081:7;:17::i;:::-;11073:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11157:18;:28;11176:8;11157:28;;;;;;;;;;;;;;;;;;;;;11150:35;;10994:198;;;:::o;9707:390::-;9772:14;9789:17;9797:8;9789:7;:17::i;:::-;9772:34;;9831:6;9824:13;;:3;:13;;;;9816:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9898:27;9904:10;9916:8;9898:5;:27::i;:::-;9877:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10041:3;10010:18;:28;10029:8;10010:28;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;10081:8;10076:3;10059:31;;10068:6;10059:31;;;;;;;;;;;;9707:390;;;:::o;11918:91::-;11962:7;11988;:14;;;;11981:21;;11918:91;:::o;8728:283::-;8851:17;8859:8;8851:7;:17::i;:::-;8843:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8908:35;8922:10;8934:8;8908:13;:35::i;:::-;8900:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8973:31;8983:5;8990:3;8995:8;8973:9;:31::i;:::-;8728:283;;;:::o;14301:240::-;14407:7;14447:17;14457:6;14447:9;:17::i;:::-;14438:6;:26;14430:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14505:21;14519:6;14505:13;:21::i;:::-;14527:6;14505:29;;;;;;;;;;;;;;14498:36;;14301:240;;;;:::o;7043:168::-;7162:42;7179:5;7186:3;7191:8;7162:42;;;;;;;;;;;;:16;:42::i;:::-;7043:168;;;:::o;2613:167:3:-;2670:16;2696:25;2724:16;:26;2741:8;2724:26;;;;;;;;;;;2696:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2765:8;2758:15;;;2613:167;;;:::o;12265:164:6:-;12326:7;12362:13;:11;:13::i;:::-;12353:6;:22;12345:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12416:6;12409:13;;12265:164;;;:::o;2283:221::-;2339:7;2358:13;2374:15;:25;2390:8;2374:25;;;;;;;;;;;;;;;;;;;;;2358:41;;2434:1;2417:19;;:5;:19;;;;2409:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2492:5;2485:12;;;2283:221;;;:::o;1827:192::-;1883:7;1928:1;1910:20;;:6;:20;;;;1902:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1987:17;:25;2005:6;1987:25;;;;;;;;;;;;;;;;1980:32;;1827:192;;;:::o;1602:137:10:-;1023:9;:7;:9::i;:::-;1015:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1700:1;1663:40;;1684:6;;;;;;;;;;;1663:40;;;;;;;;;;;;1730:1;1713:6;;:19;;;;;;;;;;;;;;;;;;1602:137::o;611:255:5:-;680:7;1023:9:10;:7;:9::i;:::-;1015:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;322:4:5;707:9;;:31;699:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;784:16;798:1;784:9;;:13;;:16;;;;:::i;:::-;772:9;:28;;;;818:41;831:1;834;837;840:6;848:10;818:12;:41::i;:::-;811:48;;611:255;;;:::o;12957:763:6:-;13041:16;13099:1;13081:20;;:6;:20;;;;13073:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13149:18;13170:17;13180:6;13170:9;:17::i;:::-;13149:38;;13216:1;13202:10;:15;13198:106;;;13291:1;13277:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;13277:16:6;;;;13270:23;;;;;13198:106;13314:23;13354:10;13340:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;13340:25:6;;;;13314:51;;13375:19;13397:13;:11;:13::i;:::-;13375:35;;13420:19;13442:1;13420:23;;13454:15;13495:1;13485:11;;13480:210;13509:11;13498:7;:22;13480:210;;13579:6;13551:34;;:15;:24;13567:7;13551:24;;;;;;;;;;;;;;;;;;;;;:34;;;13547:133;;;13627:7;13605:6;13612:11;13605:19;;;;;;;;;;;;;:29;;;;;13652:13;;;;;;;13547:133;13522:9;;;;;;;13480:210;;;13707:6;13700:13;;;;;;;12957:763;;;;:::o;819:77:10:-;857:7;883:6;;;;;;;;;;;876:13;;819:77;:::o;1170:90::-;1210:4;1247:6;;;;;;;;;;;1233:20;;:10;:20;;;1226:27;;1170:90;:::o;406:39:6:-;;;;;;;;;;;;;;;;;;;:::o;10417:267::-;10517:10;10504:23;;:9;:23;;;;10496:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10605:9;10561:18;:30;10580:10;10561:30;;;;;;;;;;;;;;;:41;10592:9;10561:41;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;10656:9;10629:48;;10644:10;10629:48;;;10667:9;10629:48;;;;;;;;;;;;;;;;;;;;;;10417:267;;:::o;9237:118::-;9305:43;9322:10;9334:3;9339:8;9305:16;:43::i;:::-;9237:118;;:::o;407:24:5:-;;;;:::o;276:50::-;322:4;276:50;:::o;7717:326:6:-;7872:17;7880:8;7872:7;:17::i;:::-;7864:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7929:35;7943:10;7955:8;7929:13;:35::i;:::-;7921:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7994:42;8008:5;8015:3;8020:8;8030:5;7994:13;:42::i;:::-;7717:326;;;;:::o;1720:737:3:-;1783:7;1808:25;1814:10;1826:6;1808:5;:25::i;:::-;1800:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1867:25;1873:10;1885:6;1867:5;:25::i;:::-;1859:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1936:6;1926;:16;;1918:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1973:17;1993:7;2001:6;1993:15;;;;;;;;;;;;;;;;;;1973:35;;2016:17;2036:7;2044:6;2036:15;;;;;;;;;;;;;;;;;;2016:35;;2066:15;2084:29;2092:3;:9;;;2103:3;:9;;;2084:7;:29::i;:::-;2066:47;;2121:19;2143:42;2183:1;2143:35;2147:3;:14;;;;;;;;;;;;2143:35;;2163:3;:14;;;;;;;;;;;;2143:35;;:3;:35::i;:::-;:39;;:42;;;;:::i;:::-;2121:64;;2194:18;2215:110;2237:6;2253;2269:11;2290:7;2307:10;2215:12;:110::i;:::-;2194:131;;2334:16;:24;2351:6;2334:24;;;;;;;;;;;2364:10;2334:41;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2334:41:3;;;;;;;;;;;;;;;;;;;;;;2383:16;:24;2400:6;2383:24;;;;;;;;;;;2413:10;2383:41;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2383:41:3;;;;;;;;;;;;;;;;;;;;;;2440:10;2433:17;;;;;;;1720:737;;;;:::o;11473:177:6:-;11579:4;11606:18;:26;11625:6;11606:26;;;;;;;;;;;;;;;:37;11633:9;11606:37;;;;;;;;;;;;;;;;;;;;;;;;;11599:44;;11473:177;;;;:::o;1888:107:10:-;1023:9;:7;:9::i;:::-;1015:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1960:28;1979:8;1960:18;:28::i;:::-;1888:107;:::o;3164:158:6:-;3222:4;3238:13;3254:15;:25;3270:8;3254:25;;;;;;;;;;;;;;;;;;;;;3238:41;;3313:1;3296:19;;:5;:19;;;;3289:26;;;3164:158;;;:::o;2774:161::-;2872:4;2920:8;2899:29;;:17;2907:8;2899:7;:17::i;:::-;:29;;;2892:36;;2774:161;;;;:::o;4282:303::-;4388:4;4408:14;4425:17;4433:8;4425:7;:17::i;:::-;4408:34;;4472:6;4460:18;;:8;:18;;;:67;;;;4519:8;4494:33;;:21;4506:8;4494:11;:21::i;:::-;:33;;;4460:67;:117;;;;4543:34;4560:6;4568:8;4543:16;:34::i;:::-;4460:117;4452:126;;;4282:303;;;;:::o;3441:537:2:-;3578:1;3563:17;;:3;:17;;;;3555:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3646:4;3631:20;;:3;:20;;;;3623:29;;;;;;3688;3715:1;3688:17;:22;3706:3;3688:22;;;;;;;;;;;;;;;;:26;;:29;;;;:::i;:::-;3663:17;:22;3681:3;3663:22;;;;;;;;;;;;;;;:54;;;;3755:3;3727:15;:25;3743:8;3727:25;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;3790:1;3773:19;;:5;:19;;;3769:157;;3835:31;3864:1;3835:17;:24;3853:5;3835:24;;;;;;;;;;;;;;;;:28;;:31;;;;:::i;:::-;3808:17;:24;3826:5;3808:24;;;;;;;;;;;;;;;:58;;;;3887:18;:28;3906:8;3887:28;;;;;;;;;;;;3880:35;;;;;;;;;;;3769:157;3962:8;3957:3;3941:30;;3950:5;3941:30;;;;;;;;;;;;3441:537;;;:::o;834:176:11:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;4447:630:2:-;4618:7;4637:19;;:::i;:::-;4659:207;;;;;;;;4686:6;4659:207;;;;4724:15;4659:207;;;;;;4768:6;4659:207;;;;;;4803:6;4659:207;;;;;;4843:11;4659:207;;;;;4637:229;;4877:18;4898:27;4923:1;4898:7;4911:6;4898:20;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;4898:20:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:24;;:27;;;;:::i;:::-;4877:48;;4941:49;4947:6;4955:10;4967:6;4975;4983;4941:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5001:41;5019:1;5023:6;5031:10;5001:9;:41::i;:::-;5060:10;5053:17;;;;4447:630;;;;;;;:::o;6036:322:6:-;6182:31;6192:5;6199:3;6204:8;6182:9;:31::i;:::-;6244:51;6267:5;6274:3;6279:8;6289:5;6244:22;:51::i;:::-;6223:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6036:322;;;;:::o;572:992:3:-;642:7;659:28;;:::i;:::-;695:13;711:12;:10;:12::i;:::-;695:28;;731:11;745:1;731:15;;803:9;815:1;803:13;;798:403;823:3;818:1;:8;798:403;;972:1;967;957:7;:11;;;:16;953:154;;1023:3;1015:5;:11;;;;;;989:38;;:10;1000:5;989:17;;;;;;;;;;;;:38;;;;;953:154;;;1092:3;1084:5;:11;;;;;;1058:38;;:10;1069:5;1058:17;;;;;;;;;;;;:38;;;;;953:154;1133:3;1125:5;:11;;;;;;1117:19;;1162:3;1154:5;:11;;;;;;1146:19;;1191:1;1183:5;:9;1175:17;;836:1;832;:5;828:9;;798:403;;;;1259:18;1290:1;1280:7;:11;;;;;;;;1259:32;;1336:2;1326:7;:12;;;;;;;;1299:39;;:10;1310:12;1299:24;;;;;;;;;;;;:39;;;;;1347:15;1376:9;1388:1;1376:13;;1371:164;1395:1;1391;:5;1371:164;;;1429:26;1441:10;1452:1;1441:13;;;;;;;;;;;1429:7;:11;;:26;;;;:::i;:::-;1419:36;;1475:1;1470;:6;1466:61;;1500:16;1512:3;1500:7;:11;;:16;;;;:::i;:::-;1490:26;;1466:61;1406:1;1402;:5;1398:9;;1371:164;;;;1550:7;1543:14;;;;;;;572:992;;;;:::o;403:105::-;461:7;492:1;487;:6;;:14;;500:1;487:14;;;496:1;487:14;480:21;;403:105;;;;:::o;2096:225:10:-;2189:1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2278:8;2249:38;;2270:6;;;;;;;;;;;2249:38;;;;;;;;;;;;2306:8;2297:6;;:17;;;;;;;;;;;;;;;;;;2096:225;:::o;1274:134:11:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;5112:447:6:-;5266:4;5287:16;5299:3;5287:11;:16::i;:::-;5282:59;;5326:4;5319:11;;;;5282:59;5351:17;5387:3;5371:37;;;5422:10;5446:5;5465:8;5487:5;5371:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5371:131:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5371:131:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5371:131:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5371:131:6;;;;;;;;;;;;;;;;5351:151;;687:10;5535:16;;5521:30;;;:10;:30;;;;5513:39;;;5112:447;;;;;;;:::o;245:92:3:-;290:5;326:3;320;:9;;;;;;307:23;;245:92;:::o;2159:459:11:-;2217:7;2463:1;2458;:6;2454:45;;;2487:1;2480:8;;;;2454:45;2509:9;2525:1;2521;:5;2509:17;;2553:1;2548;2544;:5;;;;;;:10;2536:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2610:1;2603:8;;;2159:459;;;;;:::o;1732:187::-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;3703:230:6:-;3765:4;3781:12;3883:8;3871:21;3863:29;;3925:1;3918:4;:8;3911:15;;;3703:230;;;:::o;154:714:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;154:714:5;;;;:::o",
  "source": "pragma solidity 0.5.16;\n\nimport \"./TigerBreeding.sol\";\n\n/**\n * @title The TigerMinting contract responsible to create tigers.\n * @author Andrew Ayson\n */\ncontract TigerMinting is TigerBreeding {\n    /// @dev Limits the number of tigers the contract owner can ever create.\n    uint256 public constant CREATION_LIMIT_GEN0 = 1000; \n\n    /// @dev Counts the number of tigers the contract owner has created.\n    uint256 public gen0Count;\n\n    /**\n     * @notice Creates a new gen0 tiger\n     * @dev Can only be called by owner and when limit has not be reached\n     * @return The id of the created tiger\n     */\n    function createGen0Tiger(uint256 _genes) external onlyOwner returns (uint256) {\n        require(gen0Count < CREATION_LIMIT_GEN0, \"Limit gen0 reached\");\n\n        gen0Count = gen0Count.add(1);\n\n        return _createTiger(0, 0, 0, _genes, msg.sender);\n    }\n}\n",
  "sourcePath": "/Users/bananaQ/Documents/own_projects/business/crypto_tigers/backend/contracts/TigerMinting.sol",
  "ast": {
    "absolutePath": "project:/contracts/TigerMinting.sol",
    "exportedSymbols": {
      "TigerMinting": [
        997
      ]
    },
    "id": 998,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 955,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "project:/contracts/TigerBreeding.sol",
        "file": "./TigerBreeding.sol",
        "id": 956,
        "nodeType": "ImportDirective",
        "scope": 998,
        "sourceUnit": 893,
        "src": "25:29:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 957,
              "name": "TigerBreeding",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 892,
              "src": "179:13:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TigerBreeding_$892",
                "typeString": "contract TigerBreeding"
              }
            },
            "id": 958,
            "nodeType": "InheritanceSpecifier",
            "src": "179:13:5"
          }
        ],
        "contractDependencies": [
          602,
          892,
          1584,
          1594,
          1697,
          1825
        ],
        "contractKind": "contract",
        "documentation": "@title The TigerMinting contract responsible to create tigers.\n@author Andrew Ayson",
        "fullyImplemented": true,
        "id": 997,
        "linearizedBaseContracts": [
          997,
          892,
          1584,
          1697,
          1594,
          602,
          1825
        ],
        "name": "TigerMinting",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 961,
            "name": "CREATION_LIMIT_GEN0",
            "nodeType": "VariableDeclaration",
            "scope": 997,
            "src": "276:50:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 959,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "276:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31303030",
              "id": 960,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "322:4:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000_by_1",
                "typeString": "int_const 1000"
              },
              "value": "1000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 963,
            "name": "gen0Count",
            "nodeType": "VariableDeclaration",
            "scope": 997,
            "src": "407:24:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 962,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "407:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 995,
              "nodeType": "Block",
              "src": "689:177:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 973,
                          "name": "gen0Count",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 963,
                          "src": "707:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 974,
                          "name": "CREATION_LIMIT_GEN0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 961,
                          "src": "719:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "707:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4c696d69742067656e302072656163686564",
                        "id": 976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "740:20:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_931e9a96823c341c5bd12de9f03918a69879d03c2a585f63033a7e064b342639",
                          "typeString": "literal_string \"Limit gen0 reached\""
                        },
                        "value": "Limit gen0 reached"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_931e9a96823c341c5bd12de9f03918a69879d03c2a585f63033a7e064b342639",
                          "typeString": "literal_string \"Limit gen0 reached\""
                        }
                      ],
                      "id": 972,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2030,
                        2031
                      ],
                      "referencedDeclaration": 2031,
                      "src": "699:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "699:62:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 978,
                  "nodeType": "ExpressionStatement",
                  "src": "699:62:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 979,
                      "name": "gen0Count",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 963,
                      "src": "772:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "798:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 980,
                          "name": "gen0Count",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 963,
                          "src": "784:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1852,
                        "src": "784:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 983,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "784:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "772:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 985,
                  "nodeType": "ExpressionStatement",
                  "src": "772:28:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "831:1:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "834:1:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "837:1:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "id": 990,
                        "name": "_genes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 965,
                        "src": "840:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 991,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2027,
                          "src": "848:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "848:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 986,
                      "name": "_createTiger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 601,
                      "src": "818:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256,address) returns (uint256)"
                      }
                    },
                    "id": 993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "818:41:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 971,
                  "id": 994,
                  "nodeType": "Return",
                  "src": "811:48:5"
                }
              ]
            },
            "documentation": "@notice Creates a new gen0 tiger\n@dev Can only be called by owner and when limit has not be reached\n@return The id of the created tiger",
            "id": 996,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 968,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 967,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1758,
                  "src": "661:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "661:9:5"
              }
            ],
            "name": "createGen0Tiger",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 966,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 965,
                  "name": "_genes",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "636:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 964,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "636:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "635:16:5"
            },
            "returnParameters": {
              "id": 971,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 970,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "680:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 969,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "680:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "679:9:5"
            },
            "scope": 997,
            "src": "611:255:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 998,
        "src": "154:714:5"
      }
    ],
    "src": "0:869:5"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/TigerMinting.sol",
      "exportedSymbols": {
        "TigerMinting": [
          997
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.5",
            ".16"
          ]
        },
        "id": 955,
        "name": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "attributes": {
          "SourceUnit": 893,
          "absolutePath": "project:/contracts/TigerBreeding.sol",
          "file": "./TigerBreeding.sol",
          "scope": 998,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 956,
        "name": "ImportDirective",
        "src": "25:29:5"
      },
      {
        "attributes": {
          "contractDependencies": [
            602,
            892,
            1584,
            1594,
            1697,
            1825
          ],
          "contractKind": "contract",
          "documentation": "@title The TigerMinting contract responsible to create tigers.\n@author Andrew Ayson",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            997,
            892,
            1584,
            1697,
            1594,
            602,
            1825
          ],
          "name": "TigerMinting",
          "scope": 998
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "TigerBreeding",
                  "referencedDeclaration": 892,
                  "type": "contract TigerBreeding"
                },
                "id": 957,
                "name": "UserDefinedTypeName",
                "src": "179:13:5"
              }
            ],
            "id": 958,
            "name": "InheritanceSpecifier",
            "src": "179:13:5"
          },
          {
            "attributes": {
              "constant": true,
              "name": "CREATION_LIMIT_GEN0",
              "scope": 997,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 959,
                "name": "ElementaryTypeName",
                "src": "276:7:5"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "31303030",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "number",
                  "type": "int_const 1000",
                  "value": "1000"
                },
                "id": 960,
                "name": "Literal",
                "src": "322:4:5"
              }
            ],
            "id": 961,
            "name": "VariableDeclaration",
            "src": "276:50:5"
          },
          {
            "attributes": {
              "constant": false,
              "name": "gen0Count",
              "scope": 997,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 962,
                "name": "ElementaryTypeName",
                "src": "407:7:5"
              }
            ],
            "id": 963,
            "name": "VariableDeclaration",
            "src": "407:24:5"
          },
          {
            "attributes": {
              "documentation": "@notice Creates a new gen0 tiger\n@dev Can only be called by owner and when limit has not be reached\n@return The id of the created tiger",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "createGen0Tiger",
              "scope": 997,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_genes",
                      "scope": 996,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 964,
                        "name": "ElementaryTypeName",
                        "src": "636:7:5"
                      }
                    ],
                    "id": 965,
                    "name": "VariableDeclaration",
                    "src": "636:14:5"
                  }
                ],
                "id": 966,
                "name": "ParameterList",
                "src": "635:16:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 996,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 969,
                        "name": "ElementaryTypeName",
                        "src": "680:7:5"
                      }
                    ],
                    "id": 970,
                    "name": "VariableDeclaration",
                    "src": "680:7:5"
                  }
                ],
                "id": 971,
                "name": "ParameterList",
                "src": "679:9:5"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1758,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 967,
                    "name": "Identifier",
                    "src": "661:9:5"
                  }
                ],
                "id": 968,
                "name": "ModifierInvocation",
                "src": "661:9:5"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_931e9a96823c341c5bd12de9f03918a69879d03c2a585f63033a7e064b342639",
                                  "typeString": "literal_string \"Limit gen0 reached\""
                                }
                              ],
                              "overloadedDeclarations": [
                                2030,
                                2031
                              ],
                              "referencedDeclaration": 2031,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 972,
                            "name": "Identifier",
                            "src": "699:7:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "<",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 963,
                                  "type": "uint256",
                                  "value": "gen0Count"
                                },
                                "id": 973,
                                "name": "Identifier",
                                "src": "707:9:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 961,
                                  "type": "uint256",
                                  "value": "CREATION_LIMIT_GEN0"
                                },
                                "id": 974,
                                "name": "Identifier",
                                "src": "719:19:5"
                              }
                            ],
                            "id": 975,
                            "name": "BinaryOperation",
                            "src": "707:31:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "4c696d69742067656e302072656163686564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Limit gen0 reached\"",
                              "value": "Limit gen0 reached"
                            },
                            "id": 976,
                            "name": "Literal",
                            "src": "740:20:5"
                          }
                        ],
                        "id": 977,
                        "name": "FunctionCall",
                        "src": "699:62:5"
                      }
                    ],
                    "id": 978,
                    "name": "ExpressionStatement",
                    "src": "699:62:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 963,
                              "type": "uint256",
                              "value": "gen0Count"
                            },
                            "id": 979,
                            "name": "Identifier",
                            "src": "772:9:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "add",
                                  "referencedDeclaration": 1852,
                                  "type": "function (uint256,uint256) pure returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 963,
                                      "type": "uint256",
                                      "value": "gen0Count"
                                    },
                                    "id": 980,
                                    "name": "Identifier",
                                    "src": "784:9:5"
                                  }
                                ],
                                "id": 981,
                                "name": "MemberAccess",
                                "src": "784:13:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "31",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 1",
                                  "value": "1"
                                },
                                "id": 982,
                                "name": "Literal",
                                "src": "798:1:5"
                              }
                            ],
                            "id": 983,
                            "name": "FunctionCall",
                            "src": "784:16:5"
                          }
                        ],
                        "id": 984,
                        "name": "Assignment",
                        "src": "772:28:5"
                      }
                    ],
                    "id": 985,
                    "name": "ExpressionStatement",
                    "src": "772:28:5"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 971
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 601,
                              "type": "function (uint256,uint256,uint256,uint256,address) returns (uint256)",
                              "value": "_createTiger"
                            },
                            "id": 986,
                            "name": "Identifier",
                            "src": "818:12:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 987,
                            "name": "Literal",
                            "src": "831:1:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 988,
                            "name": "Literal",
                            "src": "834:1:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 989,
                            "name": "Literal",
                            "src": "837:1:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 965,
                              "type": "uint256",
                              "value": "_genes"
                            },
                            "id": 990,
                            "name": "Identifier",
                            "src": "840:6:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2027,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 991,
                                "name": "Identifier",
                                "src": "848:3:5"
                              }
                            ],
                            "id": 992,
                            "name": "MemberAccess",
                            "src": "848:10:5"
                          }
                        ],
                        "id": 993,
                        "name": "FunctionCall",
                        "src": "818:41:5"
                      }
                    ],
                    "id": 994,
                    "name": "Return",
                    "src": "811:48:5"
                  }
                ],
                "id": 995,
                "name": "Block",
                "src": "689:177:5"
              }
            ],
            "id": 996,
            "name": "FunctionDefinition",
            "src": "611:255:5"
          }
        ],
        "id": 997,
        "name": "ContractDefinition",
        "src": "154:714:5"
      }
    ],
    "id": 998,
    "name": "SourceUnit",
    "src": "0:869:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-12-24T18:44:30.404Z",
  "devdoc": {
    "author": "Andrew Ayson",
    "methods": {
      "approve(address,uint256)": {
        "details": "[ERC721] The zero address indicates there is no approved address Requires - msg.sender is owner or approved opperator - cannot approve owner",
        "params": {
          "_tigerId": "The tiger id that is approved for",
          "_to": "The address."
        }
      },
      "balanceOf(address)": {
        "details": "[ERC721] Tigers assigned to the zero address are considered invalid, and this function throws for queries about the zero address",
        "params": {
          "_owner": "The address to check"
        },
        "return": "The address of the owner of the tiger"
      },
      "breed(uint256,uint256)": {
        "params": {
          "_dadId": "the id of the dad",
          "_momId": "the id of the mom"
        }
      },
      "createGen0Tiger(uint256)": {
        "details": "Can only be called by owner and when limit has not be reached",
        "return": "The id of the created tiger"
      },
      "getApproved(uint256)": {
        "details": "[ERC721] Get the approval address of the tiger Requires - _tigerId must exist",
        "params": {
          "_tigerId": "The tiger id"
        },
        "return": "The approved address for this tiger, or the zero address if there is none"
      },
      "getChildren(uint256)": {
        "params": {
          "_tigerId": "the id of the mom"
        },
        "return": "array of ids of the children"
      },
      "isApprovedForAll(address,address)": {
        "details": "[ERC721]",
        "params": {
          "_operator": "The operator",
          "_owner": "The owner"
        },
        "return": "True if `_operator` is an approved operator for `_owner`, false otherwise"
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "[ERC721] Tigers assigned to the zero address are considered invalid, and this function throws for queries about the zero address",
        "return": "the address of the onwer of _tigerId"
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "[ERC721] Transfer implementation with a check on caller if it can accept ERC721 Requires - valid token - valid, non-zero _to address (via _transfer) - not to this address to prevent potential misuse (via _transfer) - msg.sender to be the owner, approved, or operator - when the caller is a smart contract, it should accept ERC721 tokens",
        "params": {
          "_from": "current owner of the tiger",
          "_tigerId": "uint256 id of the tiger to be transferred",
          "_to": "address to receive the ownership of the given tiger id"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "[ERC721] This works identically to the other function with an extra data parameter except this function just sets data to \"\"",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "_from": "current owner of the tiger",
          "_tigerId": "The id of the tiger to be transferred",
          "_to": "address to receive the ownership of the given tiger id"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "[ERC721] Emits the ApprovalForAll event. Requires - cannot approve self",
        "params": {
          "_approved": "The approval status",
          "_operator": "The tiger id"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "Interface identification is specified in ERC-165. This function uses less than 30,000 gas.",
        "params": {
          "_interfaceId": "The interface identifier, as specified in ERC-165"
        },
        "return": "true if the contract implements _interfaceId and _interfaceId is not 0xffffffff, false otherwise"
      },
      "tokenByIndex(uint256)": {
        "details": "[ERC721Enumerable] Requires: - _index < totalSupply()",
        "params": {
          "_index": "A counter less than `totalSupply()`"
        },
        "return": "_index which is the same as the identifier"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.Be aware when calling this contract as its quite expensive because it loops through all tigers. Could potentially be optimized if we save all tigers also in an mapping of owners.",
        "params": {
          "_index": "uint256 representing the index to be accessed of the requested tokens list",
          "_owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokensOfOwner(address)": {
        "details": "[ERC721Enumerable] Requires - _index < balanceOf(_owner) - _owner is  non-zero addressBe aware when calling this contract as its quite expensive because it loops through all tigers",
        "params": {
          "_owner": "An address where we are interested in tigers owned by them"
        },
        "return": "The token identifier for the `_index`th tiger assigned to `_owner`,  (sort order not specified)"
      },
      "totalSupply()": {
        "details": "[ERC721Enumerable]",
        "return": "A count of valid tigers tracked by this contract, where each one of them has an assigned and queryable owner not equal to the zero address"
      },
      "transfer(address,uint256)": {
        "params": {
          "_tigerId": "id of the tiger to be transferred",
          "_to": "address to receive the ownership of the given tiger id"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "[ERC721] Transfers the ownership of a given token id to another address Requires - valid token - valid, non-zero _to address (via _transfer) - not to this address to prevent potential misuse (via _transfer) - msg.sender to be the owner, approved, or operator",
        "params": {
          "_from": "current owner of the tiger",
          "_tigerId": "id of the tiger to be transferred",
          "_to": "address to receive the ownership of the given tiger id"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "The TigerMinting contract responsible to create tigers."
  },
  "userdoc": {
    "methods": {
      "approve(address,uint256)": {
        "notice": "Change or reaffirm the approved address for an tiger"
      },
      "balanceOf(address)": {
        "notice": "Count all Tigers assigned to an owner"
      },
      "breed(uint256,uint256)": {
        "notice": "Breed a new tiger based on a mom and dad"
      },
      "createGen0Tiger(uint256)": {
        "notice": "Creates a new gen0 tiger"
      },
      "getApproved(uint256)": {
        "notice": "Get the approved address for a single tiger"
      },
      "getChildren(uint256)": {
        "notice": "Get all the children of a tigerId"
      },
      "isApprovedForAll(address,address)": {
        "notice": "Query if an address is an authorized operator for another address"
      },
      "ownerOf(uint256)": {
        "notice": "Find the owner of an Tiger"
      },
      "safeTransferFrom(address,address,uint256)": {
        "notice": "Transfers the ownership of an Tiger from one address to another address"
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "notice": "Transfers the ownership of an Tiger from one address to another address"
      },
      "setApprovalForAll(address,bool)": {
        "notice": "Enable or disable approval for a third party (\"operator\") to manage all of `msg.sender`'s assets"
      },
      "supportsInterface(bytes4)": {
        "notice": "Query if a contract implements an interface"
      },
      "tokenByIndex(uint256)": {
        "notice": "Enumerate valid tigers"
      },
      "tokensOfOwner(address)": {
        "notice": "Returns a list of all Tiger IDs assigned to an address."
      },
      "totalSupply()": {
        "notice": "Count tigers tracked by this contract"
      },
      "transfer(address,uint256)": {
        "notice": "Transfers the ownership of an own Tiger to another address"
      },
      "transferFrom(address,address,uint256)": {
        "notice": "Transfer ownership of a Tiger -- THE CALLER IS RESPONSIBLE TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING TIGERS OR ELSE THEY MAY BE PERMANENTLY LOST"
      }
    }
  }
}